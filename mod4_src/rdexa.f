      SUBROUTINE RDEXA

!     READ IN USER DEFINED EXTINCTION ABSORPTION COEFFICIENTS AND
!     ASYMMETRY PARAMETERS

      INCLUDE 'PARAMS.h'
      INCLUDE 'ERROR.h'

!     COMMONS:
      INCLUDE 'IFIL.h'
      INCLUDE 'BASE.h'
      INTEGER IREG,IREGC
      REAL ALTB
      COMMON /CARD2D/ IREG(14),ALTB(14),IREGC(14)
      INTEGER IK,IHC,JLO,JHI
      CHARACTER*4 TITLE(18)
      REAL VX(47),EXTEMP(4,47),ABTEMP(4,47),ASTEMP(4,47)
      REAL Y1,Y2,X1,X2,X
      REAL XNTRP,LNTRP
      LOGICAL LOGINT

      INTEGER I
      REAL VX0
      COMMON/EXTWAV/VX0(NWAVLN)

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      SAVE /EXTWAV/
      EXTERNAL DEVCBD,EXTDTA

      DATA VX /                                                         &
     &     .2000,   .3000,   .3371,   .5500,   .6943,  1.0600,  1.5360, &
     &     2.0000,  2.2500,  2.5000,  2.7000,  3.0000,  3.3923,  3.7500,&
     &     4.5000,  5.0000,  5.5000,  6.0000,  6.2000,  6.5000,  7.2000,&
     &     7.9000,  8.2000,  8.7000,  9.0000,  9.2000, 10.0000, 10.5910,&
     &     11.0000, 11.5000, 12.5000, 14.8000, 15.0000, 16.4000,17.2000,&
     &     18.5000, 21.3000, 25.0000, 30.0000, 40.0000, 50.0000,60.0000,&
     &     80.0000, 100.000, 150.000, 200.000, 300.000/

      IF(LJMASS) THEN
         CALL INITCARD( 'CARD2D' )
      ELSE
         READ(IRD,1200) (IREG(IK),IK=1,4)
 1200    FORMAT(4I5)
         WRITE(IPR,1210) (IREG(IK),IK=1,4)
 1210    FORMAT('1 CARD 2D *****',4I5)
      ENDIF
      WRITE(*,*) 'into Card2D'
      LOGINT=.FALSE.
      DO 1300 IHC=1,4

         IF(IREG(IHC) .EQ. 0) GO TO 1300
         LOGINT=.TRUE.
         IF(LJMASS) THEN
            CALL INITCARD( 'CARD2D1' )
         ELSE
            READ(IRD,1220) AWCCON(IHC),TITLE
 1220       FORMAT(E10.3,18A4)
            WRITE(IPR,1230) AWCCON(IHC),TITLE
 1230       FORMAT('0 CARD 2D1 **** EQUIVALENT WATER = ',1PE10.3,18A4)
            WRITE(IPR,1250)
 1250       FORMAT('0 CARD 2D2 ****')

!           NWAVLN WAS REPLACED BY 47 FOR BACKWARD COMPATIBILITY
!           AS NWAVLN IS NOW 788 (SEE PARAMS.h).
            READ(IRD,'((3(6X,2F7.5,F6.4)))')                            &
     &        (EXTEMP(IHC,I),ABTEMP(IHC,I),ASTEMP(IHC,I),I=1,47)
            WRITE(IPR,'((3(5X,F6.2,2(2X,F7.5),2X,F6.4)))')              &
     &        (VX(I),EXTEMP(IHC,I),ABTEMP(IHC,I),ASTEMP(IHC,I),I=1,47)
         ENDIF

!           AFTER THE 47 POINTS ARE READ, INTERPOLATE FOR VX0 WITH
!           788 POINTS.  BEFORE THE MODIFICATIONS, VX WAS READ BUT
!           NOT USED BECAUSE THE INFORMATION WAS IN COMMON ELSEWHERE.
!           FOR BACKWARD COMPATIBILITY, THE 47 POINTS WILL CORRESPOND
!           TO THE OLD VX ARRAY, EXPLICITLY STATED IN THE ABOVE DATA
!           STATEMENT.  BECAUSE THERE IS A NEED FOR VX0 IN THIS
!           ROUTINE, THE COMMON BLOCK /EXTWAV/ IS NOW IN THIS ROUTINE.
 1300 CONTINUE
      IF (.NOT.LOGINT) RETURN

!     INTERPOLATE
      DO 1350 I=1, NWAVLN
         CALL HUNT(VX,47,VX0(I),JLO)
         JHI=JLO+1
         X=1.0E4/VX0(I)
         DO 1400 IHC=1,4
            IF (IREG(IHC).EQ.0) GO TO 1400
            IF (JLO.EQ.0 ) THEN
               EXTC(IHC,1)=EXTEMP(IHC,1)
               ABSC(IHC,1)=ABTEMP(IHC,1)
               ASYM(IHC,1)=ASTEMP(IHC,1)
            ELSEIF (JLO.EQ.47) THEN
               EXTC(IHC,NWAVLN)=EXTEMP(IHC,47)
               ABSC(IHC,NWAVLN)=ABTEMP(IHC,47)
               ASYM(IHC,NWAVLN)=ASTEMP(IHC,47)
            ELSE
               Y1=EXTEMP(IHC,JLO)
               Y2=EXTEMP(IHC,JHI)
               X1=1.0E4/VX(JLO)
               X2=1.0E4/VX(JHI)
               EXTC(IHC,I)=XNTRP(Y1,Y2,X1,X2,X)
               Y1=ABTEMP(IHC,JLO)
               Y2=ABTEMP(IHC,JHI)
               ABSC(IHC,I)=LNTRP(Y1,Y2,X1,X2,X)
               Y1=ASTEMP(IHC,JLO)
               Y2=ASTEMP(IHC,JHI)
               ASYM(IHC,I)=LNTRP(Y1,Y2,X1,X2,X)
            ENDIF
 1400    CONTINUE
 1350 CONTINUE
      END

      REAL FUNCTION XNTRP(Y1,Y2,X1,X2,X)
      REAL Y1,Y2,X1,X2,X,C,DIFF,LNTRP

!     EXPONENTIAL INTERPOLATION BETWEEN (X1,Y1) AND (X2,Y2).
!     FIND VALUE AT X.

      IF (Y1.EQ.0.0000 .OR. Y2.EQ.0.0000) THEN
         XNTRP=LNTRP(Y1,Y2,X1,X2,X)
         RETURN
      ENDIF
      IF (Y1.EQ.Y2) THEN
         XNTRP=Y1
         RETURN
      ENDIF
      DIFF=X2-X1
      C=LOG(Y2/Y1)/DIFF
      XNTRP=Y1*EXP(C*(X-X1))
      END

      REAL FUNCTION LNTRP(YA,YB,XA,XB,X)

!     LINEAR INTERPOLATION BETWEEN (XA,YA) AND (XB,YB); FIND VALUE @ X.

      REAL YA,YB,XA,XB,X,T
      T=(X-XA)/(XB-XA)
      LNTRP=YA+T*(YB-YA)
      END
