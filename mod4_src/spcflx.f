      SUBROUTINE SPCFLX

!     SPCFLX WRITES OUT SPECTRAL FLUX, DEGRADED WITH
!     A TRIANGULAR SLIT FUNCTION, TO UNIT IFLUX.

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      INCLUDE 'ERROR.h'

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /WTFLX/
!       NFLUX   SPECTRAL BIN COUNTER FOR FLUX TABLE.
!       UPDIFF  BOUNDARY UPWARD DIFFUSE SPECTRAL FLUX [W CM-2 / CM-1].
!       DNDIFF  BOUNDARY DOWNWARD DIFFUSE SPECTRAL FLUX [W CM-2 / CM-1].
!       DNDRCT  BOUNDARY DIRECT SOLAR SPECTRAL FLUX [W CM-2 / CM-1].
!       NTERMS  NUMBER OF TERMS IN FLUX SPECTRAL SUM.
!       SMUPDF  LAYER BOUNDARY UPWARD DIFFUSE IN-BAND FLUX [W CM-2].
!       SMDNDF  LAYER BOUNDARY DOWNWARD DIFFUSE IN-BAND FLUX [W CM-2].
!       SMDNDR  LAYER BOUNDARY DIRECT SOLAR IN-BAND FLUX [W CM-2].
      INTEGER NFLUX,NTERMS
      REAL UPDIFF,DNDIFF,DNDRCT,SMUPDF,SMDNDF,SMDNDR
      COMMON/WTFLX/NFLUX,UPDIFF(0:NBINS,1:LAYDIM),                      &
     &  DNDIFF(0:NBINS,1:LAYDIM),DNDRCT(0:NBINS,1:LAYDIM),              &
     &  NTERMS,SMUPDF(LAYDIM),SMDNDF(LAYDIM),SMDNDR(LAYDIM)

!     /WTFLXC/
!        FRMT    FORMAT USED IN FLUX TABLE.
      CHARACTER*50 FRMT
      COMMON/WTFLXC/FRMT

!     /CARD4/
!       IV1      LOWEST FREQUENCY OUTPUT [CM-1].
!       IV2      HIGHEST FREQUENCY OUTPUT [CM-1].
!       IDV      PRINTOUT FREQUENCY STEP SIZE [CM-1].
!       IFWHM    TRIANGULAR SLIT FULL-WIDTH-HALF-MAXIMUM [CM-1].
!       IVX      CURRENT COMPUTATION FREQUENCY [CM-1].
!       IVOFF    OFFSET BETWEEN COMPUTATION AND OUTPUT FREQUENCIES,
!                REQUIRED FOR SLIT FUNCTION [CM-1].
!       IWRITE   COMPUTATION FREQUENCY OF NEXT WRITE [CM-1].
!       NSPCDT   NUMBER OF OUTPUT SPECTRAL DATA POINTS.
!       NWGT     NUMBER OF SPECTRAL BINS CONTRIBUTING TO SLIT FUNCTION.
!       WGT      NORMALIZED WEIGHTS USED TO DEFINE THE SLIT FUNCTION.
      INTEGER IV1,IV2,IDV,IFWHM,IVX,IVOFF,IWRITE,NSPCDT,NWGT
      REAL WGT
      COMMON/CARD4/IV1,IV2,IDV,IFWHM,IVX,IVOFF,IWRITE,NSPCDT,           &
     &  NWGT,WGT(NBINS)

!     /CNTRL/
!       IKMAX    NUMBER OF PATH SEGMENTS ALONG LINE-OF-SIGHT.
!       ML       NUMBER OF ATMOSPHERIC PROFILE LEVELS.
!       MLFLX    NUMBER OF LEVELS FOR WHICH FLUX VALUES ARE WRITTEN.
!       ISSGEO   LINE-OF-SIGHT FLAG (0 = SENSOR PATH, 1 = SOLAR PATHS).
!       IMULT    MULTIPLE SCATTERING FLAG
!                  (0=NONE, 1=AT SENSOR, -1=AT FINAL OR TANGENT POINT).
      INTEGER IKMAX,ML,MLFLX,ISSGEO,IMULT
      COMMON/CNTRL/IKMAX,ML,MLFLX,ISSGEO,IMULT

!     COMMON /CFLAGS/
!       YFLAG    Y COORDINATE FLAG FOR PLOT.DAT FILE
!                  = "T" FOR TRANSMITTANCE
!                  = "R" FOR RADIANCE (IRRADIANCE FOR IEMSCT=3)
!                  = "N" FOR NO PLOT.DAT OUTPUT
!       XFLAG    X COORDINATE FLAG FOR PLOT.DAT FILE
!                  = "W" FOR FREQUENCY IN WAVENUMBERS (CM-1) AND
!                        RADIANCE IN W SR-1 CM-2 / CM-1
!                  = "M" FOR WAVELENGTH IN MICRONS AND
!                        RADIANCE IN W SR-1 CM-2 / MICRON
!                  = "N" FOR WAVELENGTH IN NANOMETERS AND
!                        RADIANCE IN MICRO-WATTS SR-1 CM-2 / NANOMETER
!       DLIMIT   DELIMITER CHARACTER STRING BETWEEN MODTRAN RUNS
!       FLAGS    SCANNING FUNCTION FLAGS.
      CHARACTER YFLAG*1,XFLAG*1,DLIMIT*8,FLAGS*7
      COMMON/CFLAGS/YFLAG,XFLAG,DLIMIT,FLAGS

!     COMMON/CSCAN/
!       CHUNIT   UNIT FLAG ('W'=WAVENUMBERS;'M'=MICRONS;'N'=NANOMETERS).
!       RELABS   SPECTRAL RESOLUTION FLAG('A'=ABSOLUTE;'R'=RELATIVE[%]).
!       LNFEED   LINE FEED FLAG FOR .FLX FILE ('T' FOR 80 CHARACTER
!                  LINES, 'F' FOR LONG LINES, ' ' FOR NO .FLX FILE).
      CHARACTER*1 CHUNIT,RELABS,LNFEED
      COMMON/CSCAN/CHUNIT,RELABS,LNFEED

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       IK      LAYER INDEX.
!       IBIN    SPECTRAL INDEX FOR SLIT FUNCTION.
!       IBINM1  PREVIOUS SPECTRAL INDEX FOR SLIT FUNCTION.
!       V       OUTPUT FREQUENCY [CM-1].
!       WAVLEN  OUTPUT WAVELENGTH [NM OR MICRONS].
!       CONV    SPECTRAL FLUX FREQUENCY TO WAVELENGTH CONVERSION FACTOR.
      INTEGER IK,IBIN,IBINM1
      REAL V,WAVLEN,CONV

!     SKIP WRITING FLUX FILE IF LNFEED IS BLANK:
      IF(LNFEED.EQ.' ')RETURN
      !WRITE(*,*) 'into spcflx'
!     LAYER LOOP FIRST:
      DO 20 IK=1,ML

!         INITIALIZE OUTPUT ARRAYS WITH WEIGHTED FIRST VALUE
          UPDIFF(0,IK)=WGT(1)*UPDIFF(1,IK)
          DNDIFF(0,IK)=WGT(1)*DNDIFF(1,IK)
          DNDRCT(0,IK)=WGT(1)*DNDRCT(1,IK)

!         PASS SLIT FUNCTION OVER REMAINING VALUES
!         AND THEN PUSH VALUES UP ONE INDEX:
          IBINM1=1
          DO 10 IBIN=2,NWGT
              UPDIFF(0,IK)=UPDIFF(0,IK)+WGT(IBIN)*UPDIFF(IBIN,IK)
              DNDIFF(0,IK)=DNDIFF(0,IK)+WGT(IBIN)*DNDIFF(IBIN,IK)
              DNDRCT(0,IK)=DNDRCT(0,IK)+WGT(IBIN)*DNDRCT(IBIN,IK)
              UPDIFF(IBINM1,IK)=UPDIFF(IBIN,IK)
              DNDIFF(IBINM1,IK)=DNDIFF(IBIN,IK)
              DNDRCT(IBINM1,IK)=DNDRCT(IBIN,IK)
              IBINM1=IBIN
   10     CONTINUE

!         SUM SPECTRAL FLUXES:
          IF(IVX.GE.IWRITE)THEN
              SMUPDF(IK)=SMUPDF(IK)+UPDIFF(0,IK)
              SMDNDF(IK)=SMDNDF(IK)+DNDIFF(0,IK)
              SMDNDR(IK)=SMDNDR(IK)+DNDRCT(0,IK)
          ENDIF

!         INITIALIZE DOWNWARD DIRECT SOLAR FLUX TERM:
          DNDRCT(NWGT,IK)=0.
   20 CONTINUE

!     WRITE FLUX TABLE:
      IF(IVX.GE.IWRITE)THEN
          NTERMS=NTERMS+1
          V=FLOAT(IVX-IVOFF)
          IF(XFLAG.EQ.'N')THEN
              WAVLEN=1.E7/V
              CONV=V/WAVLEN
              IF(.NOT.LJMASS) WRITE(IFLUX,FMT=FRMT)                     &
     &          WAVLEN,(CONV*UPDIFF(0,IK),                              &
     &          CONV*DNDIFF(0,IK),CONV*DNDRCT(0,IK),IK=1,MLFLX)
          ELSEIF(XFLAG.EQ.'M')THEN
              WAVLEN=1.E4/V
              CONV=V/WAVLEN
              IF(.NOT.LJMASS) WRITE(IFLUX,FMT=FRMT)                     &
     &          WAVLEN,(CONV*UPDIFF(0,IK),                              &
     &          CONV*DNDIFF(0,IK),CONV*DNDRCT(0,IK),IK=1,MLFLX)
          ELSE
              IF(.NOT.LJMASS) WRITE(IFLUX,FMT=FRMT)                     &
     &          V,(UPDIFF(0,IK),DNDIFF(0,IK),DNDRCT(0,IK),IK=1,MLFLX)
          ENDIF
      ENDIF
      RETURN
      END
