      SUBROUTINE FLAYZ(ML,ICLD,GNDALT,IVSA)

!     THIS ROUTINE DETERMINES THE LAYER BOUNDARIES WHEN
!     ONE OF THE MODEL ATMOSPHERES IS SELECTED.

!     INCLUDE PARAMETERS.
      INCLUDE 'PARAMS.h'
      INCLUDE 'ERROR.h'
      INTEGER NDFLT
      PARAMETER(NDFLT=36)

!     DECLARE INPUTS.
      INTEGER ML,ICLD,IVSA
      REAL GNDALT

!     LIST COMMONS.

!     /MODEL/
!       ZM       PROFILE BOUNDARY ALTITUDES [KM].
!       PM       PROFILE BOUNDARY PRESSURES [MBAR].
!       TM       PROFILE BOUNDARY TEMPERATURES [K].
!       RFNDX    PROFILE BOUNDARY REFRACTIVITIES.
!       DENSTY   PROFILE BOUNDARY DENSITIES [UNITS DEPEND ON SPECIES].
!       LRHSET   FLAG, TRUE IF RELATIVE HUMIDITY CANNOT BE SCALED.
      REAL ZM,PM,TM,RFNDX,DENSTY
      LOGICAL LRHSET
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    &
     &  RFNDX(LAYDIM),DENSTY(MEXT,LAYDIM),LRHSET(LAYDIM)
      INTEGER NCRALT,NCRSPC
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      &
     &  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP
      REAL ZVSA,RHVSA,AHVSA
      INTEGER IHVSA
      COMMON/ZVSALY/ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)
      INCLUDE 'IFIL.h'

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     DECLARE LOCAL VARIABLES.
      INTEGER I,ILAST,INEXT,NEXT,IHI,J,IM1,ICIR(4)
      REAL DALT,CLDD,TOL,CIRRUS(4)

!     DECLARE DATA
      REAL ZDFLT(NDFLT)
      DATA ZDFLT/ 0., 1., 2., 3., 4., 5., 6., 7., 8., 9.,10.,11.,       &
     &           12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,       &
     &           24.,25.,30.,35.,40.,45.,50.,55.,60.,70.,80.,100./
      IF(IVSA.EQ.1)THEN

!         VERTICAL STRUCTURE ALGORITHM (VSA) OPTION IS ON.
!         FIRST 9 BOUNDARY ALTITUDES WERE DEFINED IN ROUTINE VSA.
          DO 10 I=1,9
              ZM(I)=ZVSA(I)
   10     CONTINUE

!         ADD A BOUNDARY ALTITUDE 10 METERS ABOVE ZVSA(9).
          ML=10
          ZM(10)=ZM(9)+.01

!         FIND THE FIRST DEFAULT ALTITUDE HALF A METER ABOVE ZM(10).
          ILAST=0
          DO 20 INEXT=1,NDFLT
              IF(ZDFLT(INEXT).GE.ZM(10)+.0005)GOTO30
   20     ILAST=INEXT

!         NO DEFAULT ALTITUDES ABOVE ZM(10)+.0005.
          RETURN

!         ADD DEFAULT ALTITUDES.
   30     CONTINUE
          IF(ML+NDFLT-ILAST.GT.LAYDIM)THEN
              WRITE(IPR,'(2A,I3,/8X,2A,I3,A)')                          &
     &          ' ERROR:  VERTICAL STRUCTURE ALGORITHM INCREASES',      &
     &          ' LAYER BOUNDARY NUMBER ABOVE',LAYDIM,' INCREASE',      &
     &          ' PARAMETER LAYDIM TO',ML+NDFLT-ILAST,' IN PARAMS.h'
              IF(LJMASS)CALL WRTBUF(FATAL)
              STOP 'INCREASE PARAMETER LAYDIM'
          ENDIF
          DO 40 I=INEXT,NDFLT
              ML=ML+1
              ZM(ML)=ZDFLT(I)
   40     CONTINUE
          RETURN
      ENDIF

!     ASSIGN DEFAULT ALTITUDES
      ML=NDFLT
      DO 50 I=1,NDFLT
          ZM(I)=ZDFLT(I)
   50 CONTINUE

!     IF THE INPUT GROUND ALTITUDE IS LESS THAN 6 KM ABOVE
!     SEA LEVEL, SCALE BOTTOM 5 LAYER BOUNDARIES.
      IF(GNDALT.LT.ZM(7))THEN
          DALT=(ZM(7)-GNDALT)/(ZM(7)-ZM(1))
          DO 60 I=6,1,-1
              ZM(I)=GNDALT+DALT*(ZM(I)-ZM(1))
   60     CONTINUE
      ENDIF
      IF(ICLD.NE.18 .AND. ICLD.NE.19)RETURN

!     CIRRUS CLOUD.  DEFINE CLOUD BOUNDARIES.
      CLDD=.1*CTHIK
      CIRRUS(1)=CALT-.5*CLDD
      IF(CIRRUS(1).LE.GNDALT)CIRRUS(1)=GNDALT
      CIRRUS(2)=CIRRUS(1)+CLDD
      CIRRUS(3)=CIRRUS(1)+CTHIK
      CIRRUS(4)=CIRRUS(3)+CLDD
      IF(CIRRUS(4).GE.ZM(NDFLT))THEN
          WRITE(IPR,'(2A,/8X,2A)')' ERROR:  CIRRUS LAYER',              &
     &      ' IS ABOVE THE TOP OF THE MODEL ATMOSPHERE.',               &
     &      ' IF YOU REALLY WANT A CLOUD AT THIS ALTITUDE,',            &
     &      ' INPUT A USER-DEFINED ATMOSPHERE.'
          IF(LJMASS)CALL WRTBUF(FATAL)
          STOP 'CIRRUS CLOUD ABOVE TOP OF ATMOSPHERE'
      ENDIF

!     CHECK ZM DIMENSION
      ML=NDFLT+4
      IF(LAYDIM.LT.ML)THEN
          WRITE(IPR,'(3A,I3,/14X,A,I3,A)')' ERROR:  CIRRUS',            &
     &      ' LAYER INCREASES LAYER BOUNDARY NUMBER ABOVE',LAYDIM,      &
     &      ' INCREASE PARAMETER LAYDIM TO',ML,' IN PARAMS.h'
          IF(LJMASS)CALL WRTBUF(FATAL)
          STOP 'INCREASE PARAMETER LAYDIM'
      ENDIF

!     COMBINE DEFAULT AND CIRRUS LAYERS STARTING FROM THE TOP.
      NEXT=ML
      IHI=NDFLT
      DO 90 J=4,1,-1
          DO 70 I=IHI,1,-1
              IF(CIRRUS(J).GE.ZM(I))GOTO80
              ZM(NEXT)=ZM(I)
              NEXT=NEXT-1
   70     CONTINUE
   80     CONTINUE
          ZM(NEXT)=CIRRUS(J)
          ICIR(J)=NEXT
          NEXT=NEXT-1
          IHI=I
   90 CONTINUE

!     SET TOLERANCE FOR MERGING LAYERS
      TOL=MIN(.5*CLDD,.0005)

!     CHECK FOR MERGING
      DO 120 J=4,1,-1
          IF(ZM(ICIR(J)+1)-ZM(ICIR(J)).LT.TOL)THEN
              IM1=ICIR(J)+1
              DO 100 I=ICIR(J)+2,ML
                  ZM(IM1)=ZM(I)
  100         IM1=I
              ML=ML-1
          ELSEIF(ZM(ICIR(J))-ZM(ICIR(J)-1).LT.TOL)THEN
              IM1=ICIR(J)-1
              DO 110 I=ICIR(J),ML
                  ZM(IM1)=ZM(I)
  110         IM1=I
              ML=ML-1
          ENDIF
  120 CONTINUE
      RETURN
      END
