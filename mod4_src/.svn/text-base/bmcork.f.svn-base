      SUBROUTINE BMCORK(KNTRVL,IK,MSOFF)

!     THIS ROUTINE RETURNS LINE-OF-SIGHT PATH EXTINCTION OPTICAL
!     DEPTHS FOR THE "KNTRVL" CORRELATED-K (CORK) METHOD
!     SUB-INTERVALS OF THE BAND MODEL (BM) SPECTRAL BIN.

!     INPUTS:
!       KNTRVL   NUMBER OF CORRELATED K'S PER SPECTRAL INTERVAL.
!       IK       LAYER INDEX FOR CURRENT PATH.
!       MSOFF    LAYER INDEX OFFSET (EXCEEDS ZERO FOR THE MULTIPLE
!                SCATTERING VERTICAL PATH CALCULATION).
      INTEGER KNTRVL,IK,MSOFF

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      INCLUDE 'BASE.h'
      INCLUDE 'BMDAT.h'
      INCLUDE 'BMHEAD.h'

!     LOCAL VARIABLES:
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
      INTEGER INDTLO,INDTHI,MOLSPC,ITLSUB,LAYER
      REAL TMPFAC,SUMDEP,SMROOT,SUMDOP,SUMLOR,BEER,COLAMT,              &
     &  ABCOEF,OPTDEP,SPCLIN,TAIL25,ALFDOP,ALFLOR,                      &
     &  WIDDOP,WIDLOR,TRNTOT,SPACMN,SMCONT(MTLSUB)

!     FUNCTIONS:
      REAL BMTRN

!     DETERMINE LAYER INDEX
      LAYER=IK+MSOFF

!     FETCH TEMPERATURE INTERPOLATION PARAMETERS:
!       INDTLO   LOWER TEMPERATURE INDEX
!       INDTHI   HIGHER TEMPERATURE INDEX
!       TMPFAC   INTERPOLATION FACTOR (=0 FOR HIGHER TEMPERATURE)
!                                     (=1 FOR LOWER TEMPERATURE)
      INDTHI=JJ(LAYER)
      INDTLO=INDTHI-1
      TMPFAC=FF(LAYER)

!     INITIALIZE CONTINUUM OPTICAL DEPTH WITH
!     SPECTRALLY INTERPOLATED 5 CM-1 DATA:
      SMCONT(1)=TX(14)

!     LOOP OVER BEER'S LAW MOLECULAR SPECIES (E.G. CFC'S):
!        1=CFC-11    2=CFC-12    3=CFC-13    4=CFC-14    5=CFC-22
!        6=CFC-113   7=CFC-114   8=CFC-115   9=CLONO2   10=HNO4
!       11=CHCL2F   12=CCL4     13=N2O5
      DO MOLSPC=NMOL+1,NMOLXT
          COLAMT=WPATH(LAYER,KPOINT(MOLSPC))

!         ADD BEER'S LAW OPTICAL DEPTHS TO SMCONT(1):
          IF(SD(1,MOLSPC,1).GT.0. .AND. COLAMT.GT.0.)THEN
              BEER=SD(INDTHI,MOLSPC,1)
              BEER=BEER+TMPFAC*(SD(INDTLO,MOLSPC,1)-BEER)
              SMCONT(1)=SMCONT(1)+BEER*COLAMT
          ENDIF
      ENDDO

!     INITIALIZE REMAINDER OF CONTINUUM OPTICAL DEPTH ARRAY:
      DO ITLSUB=2,NTLSUB
          SMCONT(ITLSUB)=SMCONT(1)
      ENDDO

!     INITIALIZE MOLECULAR BAND MODEL SPECIES SUMS:
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   SUM OVER MOLECULAR LINES OF THE SQUARE ROOT OF
!                THE LINE STRENGTHS TIMES THE COLUMN AMOUNTS
!                ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ/COLLISION LINE WIDTHS TIMES
!                OPTICAL DEPTHS [CM-1].
      SUMDEP=0.
      SMROOT=0.
      SUMDOP=0.
      SUMLOR=0.

!     INITIALIZE BAND MODEL TRANSMISSION MINIMUM LINE SPACING:
      TRNTOT=1.
      SPACMN=1./IBNDWD

!     LOOP OVER BAND MODEL MOLECULAR SPECIES
!       1=H2O    2=CO2    3=O3     4=N2O    5=CO     6=CH4
!       7=O2     8=NO     9=SO2   10=NO2   11=NH3   12=HNO3
      DO MOLSPC=1,NMOL

!           COLAMT   SPECIES COLUMN DENSITY [ATM CM]
          COLAMT=WPATH(LAYER,KPOINT(MOLSPC))
          IF(COLAMT.GT.0.)THEN

!             LINE CENTER CONTRIBUTIONS
              IF(SD(1,MOLSPC,0).GT.0.)THEN

!                 MOLSPC HAS LINES CENTERED IN THE CURRENT
!                 SPECTRAL INTERVAL.  INTERPOLATE THE BAND
!                 MODEL DATA OVER TEMPERATURE.
!                   ABCOEF   ABSORPTION COEFFICIENT [ATM-1 CM-1]
!                   OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH
!                   SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM]
                  ABCOEF=SD(INDTHI,MOLSPC,0)
                  ABCOEF=ABCOEF+TMPFAC*(SD(INDTLO,MOLSPC,0)-ABCOEF)
                  OPTDEP=ABCOEF*COLAMT
                  SUMDEP=SUMDEP+OPTDEP
                  SPCLIN=OD(INDTHI,MOLSPC)
                  SPCLIN=SPCLIN+TMPFAC*(OD(INDTLO,MOLSPC)-SPCLIN)
                  IF(SPCLIN.LT.SPACMN)SPACMN=SPCLIN
                  SMROOT=SMROOT+SQRT(OPTDEP*SPCLIN)
                  ALFDOP=T5(LAYER)*DOP0(MOLSPC)
                  SUMDOP=SUMDOP+OPTDEP*ALFDOP

!                 ASSUME THE LORENTZ/COLLISION HALF-WIDTH
!                 FOR ALL MOLECULES VARIES WITH TEMPERATURE
!                 TO THE NEGATIVE 3/4 POWER.
                  ALFLOR=PTM75(LAYER)*ALF0(MOLSPC)
                  SUMLOR=SUMLOR+OPTDEP*ALFLOR

!                 CALCULATE THE BAND MODEL TRANSMITTANCE
                  IF(OPTDEP.LT..001)THEN
                      TRNTOT=TRNTOT*(1.-OPTDEP)
                  ELSE
                      WIDDOP=SPCLIN*ALFDOP
                      WIDLOR=SPCLIN*ALFLOR
                      TRNTOT=TRNTOT*BMTRN(OPTDEP,SPCLIN,WIDDOP,WIDLOR)
                  ENDIF
              ENDIF

!             LINE TAIL (TO 25 CM-1 FROM LINE CENTER) CONTRIBUTIONS.
!             LORENTZ LINE TAILS WERE COMPUTED AT 1 ATM SO PRESSURE IS
!             INCORPORATED INTO THE COLUMN AMOUNT VARIABLE, COLAMT.
!               TAIL25   LINE TAIL BAND MODEL PARAMETER [ATM-1 CM-1]
              IF(SD(1,MOLSPC,1).GT.0.)THEN
                  COLAMT=COLAMT*PATM(LAYER)
                  DO ITLSUB=1,NTLSUB
                      TAIL25=SD(INDTHI,MOLSPC,ITLSUB)
                      TAIL25=TAIL25                                     &
     &                  +TMPFAC*(SD(INDTLO,MOLSPC,ITLSUB)-TAIL25)
                      SMCONT(ITLSUB)=SMCONT(ITLSUB)+TAIL25*COLAMT
                  ENDDO
              ENDIF
          ENDIF
      ENDDO

!     COMPUTE CORRELATED-K EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES.
      CALL CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                           &
     &  TRNTOT,KNTRVL,SPACMN,SMCONT)
      RETURN
      END
      SUBROUTINE CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                     &
     &  TRNTOT,KNTRVL,SPACMN,SMCONT)

!     THIS ROUTINE COMPUTES CORRELATED-K SINGLE LAYER
!     EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES FROM
!     THE SINGLE LAYER BAND MODEL TRANSMITTANCE, TRNTOT.

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUTS:
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   SUM OVER MOLECULAR LINES OF THE SQUARE ROOT OF
!                THE LINE STRENGTHS TIMES THE COLUMN AMOUNTS
!                ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ/COLLISION LINE WIDTHS TIMES
!                OPTICAL DEPTHS [CM-1].
!       TRNTOT   BAND MODEL TOTAL TRANSMITTANCE.
!       KNTRVL   NUMBER OF CORRELATED K'S PER SPECTRAL INTERVAL.
!       SMCONT   CONTINUUM OPTICAL DEPTH ARRAY.
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
      REAL SUMDEP,SMROOT,SUMDOP,SUMLOR,TRNTOT,SPACMN,SMCONT(MTLSUB)
      INTEGER KNTRVL

!     COMMONS:
      INCLUDE 'BMHEAD.h'

!     COMMON /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS
!       TRNLAY   INCREMENTAL TRANSMITTANCES
!       TRNCUM   CUMULATIVE TRANSMITTANCES
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB,DEPLAY,TRNLAY,TRNCUM,CONTWT
      INTEGER K2TAIL
      COMMON/CORKDT/WTKSUB(MXKSUB),DEPLAY(MXKSUB),TRNLAY(MXKSUB),       &
     &  TRNCUM(MXKSUB),K2TAIL(MXKSUB),CONTWT(MTLSUB,MXKSUB)
      SAVE /CORKDT/

!     LOCAL VARIABLES:
      INTEGER ITLSUB,INTRVL,K2TL
      REAL AVGSPC,AVGDOP,AVGLOR,RLINES,AVGTRN,AVGDEP,TNCONT(MTLSUB)

!     SUB-INTERVAL OPTICAL DEPTHS AND TRANSMITTANCES
      IF(SUMDEP.GT.0.)THEN

!         MOLECULAR SPECIES AVERAGED BAND MODEL PARAMETERS.
!           AVGSPC   LAYER LINE SPACING BAND MODEL PARAMETER [CM].
!           AVGDOP   LAYER DOPPLER LINE WIDTH [CM-1].
!           AVGLOR   LAYER LORENTZ/COLLISION LINE WIDTH [CM-1].
          AVGSPC=SMROOT**2/SUMDEP
          AVGDOP=SUMDOP/SUMDEP
          AVGLOR=SUMLOR/SUMDEP
          IF(SUMDEP.GE..001)                                            &
     &      CALL CHKSPC(SUMDEP,AVGSPC,AVGDOP,AVGLOR,TRNTOT,SPACMN)

!         FETCH THE CORRELATED-K OPTICAL DEPTHS AND TRANSMITTANCES.
!           RLINES   LAYER EFFECTIVE NUMBER OF LINES.
!           DEPLAY   THE CORRELATED-K OPTICAL DEPTHS.
!           TRNLAY   THE CORRELATED-K TRANSMITTANCES.
          RLINES=IBNDWD*AVGSPC
          CALL CORK(KNTRVL,SUMDEP,RLINES,AVGDOP,AVGLOR,TRNTOT)

!         INCLUDE CONTINUUM CONTRIBUTIONS.
          IF(SMCONT(1).GT.0.)THEN

!             CALCULATE CONTINUUM TRANSMITTANCES:
              DO ITLSUB=1,NTLSUB
                  TNCONT(ITLSUB)=EXP(-SMCONT(ITLSUB))
              ENDDO

!             PARTITION LINE TAILS AMONG K-INTERVALS:
              DO INTRVL=1,KNTRVL
                  K2TL=K2TAIL(INTRVL)
                  IF(K2TL.GT.0)THEN

!                     USE ONE LINE-TAIL EXTINCTION VALUE:
                      DEPLAY(INTRVL)=DEPLAY(INTRVL)+SMCONT(K2TL)
                      TRNLAY(INTRVL)=TRNLAY(INTRVL)*TNCONT(K2TL)
                  ELSE

!                     COMBINE MULTIPLE LINE-TAIL EXTINCTION VALUES:
                      AVGDEP=CONTWT(1,INTRVL)*SMCONT(1)
                      AVGTRN=CONTWT(1,INTRVL)*TNCONT(1)
                      DO ITLSUB=2,NTLSUB
                          AVGTRN=AVGTRN                                 &
     &                      +CONTWT(ITLSUB,INTRVL)*TNCONT(ITLSUB)
                          AVGDEP=AVGDEP                                 &
     &                      +CONTWT(ITLSUB,INTRVL)*SMCONT(ITLSUB)
                      ENDDO
                      IF(AVGTRN.GT.0. .AND. AVGTRN.LT..999)THEN
                          TRNLAY(INTRVL)=TRNLAY(INTRVL)*AVGTRN
                          DEPLAY(INTRVL)=DEPLAY(INTRVL)-LOG(AVGTRN)
                      ELSE
                          DEPLAY(INTRVL)=DEPLAY(INTRVL)+AVGDEP
                          TRNLAY(INTRVL)=TRNLAY(INTRVL)*EXP(-AVGDEP)
                      ENDIF
                  ENDIF
              ENDDO
          ENDIF
      ELSE

!         COMBINE LINE TAILS WITH CONTINUUM CONTRIBUTIONS
!         CALCULATING OPTICAL DEPTHS AND TRANSMITTANCES.
          DO ITLSUB=1,NTLSUB
              TNCONT(ITLSUB)=EXP(-SMCONT(ITLSUB))
          ENDDO
          DO INTRVL=1,KNTRVL
              K2TL=K2TAIL(INTRVL)
              IF(K2TL.GT.0)THEN

!                 USE ONE LINE-TAIL EXTINCTION VALUE:
                  DEPLAY(INTRVL)=SMCONT(K2TL)
                  TRNLAY(INTRVL)=TNCONT(K2TL)
              ELSE

!                 COMBINE MULTIPLE LINE-TAIL EXTINCTION VALUES:
                  AVGDEP=CONTWT(1,INTRVL)*SMCONT(1)
                  AVGTRN=CONTWT(1,INTRVL)*TNCONT(1)
                  DO ITLSUB=2,NTLSUB
                      AVGTRN=AVGTRN+CONTWT(ITLSUB,INTRVL)*TNCONT(ITLSUB)
                      AVGDEP=AVGDEP+CONTWT(ITLSUB,INTRVL)*SMCONT(ITLSUB)
                  ENDDO
                  IF(AVGTRN.GT.0. .AND. AVGTRN.LT..999)THEN
                      TRNLAY(INTRVL)=AVGTRN
                      DEPLAY(INTRVL)=-LOG(AVGTRN)
                  ELSE
                      DEPLAY(INTRVL)=AVGDEP
                      TRNLAY(INTRVL)=EXP(-AVGDEP)
                  ENDIF
              ENDIF
          ENDDO
      ENDIF
      RETURN
      END
      SUBROUTINE BMCRKS(KNTRVL,LAYER)

!     THIS ROUTINE RETURNS SOLAR PATH EXTINCTION OPTICAL
!     DEPTHS FOR THE "KNTRVL" CORRELATED-K (CORK) METHOD
!     SUB-INTERVALS OF THE BAND MODEL (BM) SPECTRAL BIN.

!     INPUTS
!       KNTRVL   NUMBER OF CORRELATED K'S PER SPECTRAL INTERVAL.
!       LAYER    LAYER BOUNDARY INDEX FOR CURRENT PATH
      INTEGER KNTRVL,LAYER

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      INCLUDE 'IFIL.h'
      INCLUDE 'BASE.h'
      INCLUDE 'SOLS.h'
      INCLUDE 'BMDAT.h'

!     COMMON /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS
!       TRNLAY   INCREMENTAL TRANSMITTANCES
!       TRNCUM   CUMULATIVE TRANSMITTANCES
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB,DEPLAY,TRNLAY,TRNCUM,CONTWT
      INTEGER K2TAIL
      COMMON/CORKDT/WTKSUB(MXKSUB),DEPLAY(MXKSUB),TRNLAY(MXKSUB),       &
     &  TRNCUM(MXKSUB),K2TAIL(MXKSUB),CONTWT(MTLSUB,MXKSUB)
      SAVE /CORKDT/

!     /MSRD/
!       CSSCAT   COSINE OF THE SCATTERING ANGLE.
!                (AT H1 IF IMULT=1; AT OR "NEAR" H2 IF IMULT=-1)
!       SLEGEN   Nth LEGENDRE POLYNOMIAL EVALUATED AT THE COSINE OF THE
!                SCATTERING ANGLE TIMES (2N+1)/4pi (N=0 TO NSTR-1).
!       CSZEN0   LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.
!       CSZEN    LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.
!       CSZENX   AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING
!                (AWAY FROM EARTH) THE CURRENT LAYER.
!       BBGRND   THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].
!       BBNDRY   LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1].
!       TCONT    LAYER CONTINUUM OPTICAL DEPTH.
!       TAUT     LAYER TOTAL OPTICAL DEPTH.
!       GTSCAT   SUM OVER SCATTERING SOURCES OF SCATTERING OPTICAL DEPTH
!                AND PHASE FUNCTION LEGENDRE COEFFICIENT PRODUCTS.
!       COSBAR   LAYER EFFECTIVE SCATTERING ASYMMETRY FACTOR.
!       DEPRAT   FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.
!       S0DEP    OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.
!       S0TRN    TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]
!       UPF      LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].
!       DNF      LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].
!       UPFS     LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].
!       DNFS     LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].
      REAL CSSCAT,SLEGEN,CSZEN0,CSZEN,CSZENX,TCONT,TAUT,GTSCAT,COSBAR,  &
     &  BBGRND,BBNDRY,S0DEP,S0TRN,DEPRAT,UPF,DNF,UPFS,DNFS
      COMMON/MSRD/CSSCAT,SLEGEN(0:MAZ),                                 &
     &  CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),TCONT(LAYDIM),      &
     &  TAUT(MXKSUB,LAYDIM),GTSCAT(0:MXCMU,1:LAYDIM),COSBAR(LAYDIM),    &
     &  BBGRND,BBNDRY(LAYDIM),S0DEP(MXKSUB,LAYTWO),S0TRN(MXKSUB,LAYTWO),&
     &  DEPRAT(MXKSUB,LAYDIM),UPF(MXKSUB,LAYDIM),DNF(MXKSUB,LAYDIM),    &
     &  UPFS(MXKSUB,LAYDIM),DNFS(MXKSUB,LAYDIM)
      INCLUDE 'BMHEAD.h'

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
      INTEGER INDTLO,INDTHI,MOLSPC,INTRVL,ITLSUB,LAYTOP,LAYBOT
      REAL TMPFAC,SUMDEP,SMROOT,SUMDOP,SUMLOR,BEER,COLAMT,              &
     &  ABCOEF,OPTDEP,SPCLIN,TAIL25,ALFDOP,ALFLOR,                      &
     &  WIDDOP,WIDLOR,TRNTOT,SPACMN,SMCONT(MTLSUB)
      LOGICAL LWARN

!     FUNCTIONS:
      REAL BMTRN

!     DATA:
!       LWARN    WARNING MESSAGE FLAG.
      SAVE LWARN
      DATA LWARN/.TRUE./

!     INITIALIZE CONTINUUM OPTICAL DEPTH WITH
!     SPECTRALLY INTERPOLATED 5 CM-1 DATA:
      SMCONT(1)=TX(14)

!     LOOP OVER BEER'S LAW MOLECULAR SPECIES (E.G. CFC'S):
!        1=CFC-11    2=CFC-12    3=CFC-13    4=CFC-14    5=CFC-22
!        6=CFC-113   7=CFC-114   8=CFC-115   9=CLONO2   10=HNO4
!       11=CHCL2F   12=CCL4     13=N2O5
      DO MOLSPC=NMOL+1,NMOLXT
          COLAMT=WPATHS(LAYER,KPOINT(MOLSPC))

!         ADD BEER'S LAW OPTICAL DEPTHS TO SMCONT(1):
          IF(SD(1,MOLSPC,1).GT.0. .AND. COLAMT.GT.0.)THEN
              INDTHI=JJS(LAYER,MOLSPC)
              BEER=SD(INDTHI,MOLSPC,1)
              BEER=BEER+FFS(LAYER,MOLSPC)*(SD(INDTHI-1,MOLSPC,1)-BEER)
              SMCONT(1)=SMCONT(1)+BEER*COLAMT
          ENDIF
      ENDDO

!     INITIALIZE REMAINDER OF CONTINUUM OPTICAL DEPTH ARRAY:
      DO ITLSUB=2,NTLSUB
          SMCONT(ITLSUB)=SMCONT(1)
      ENDDO

!     INITIALIZE MOLECULAR SPECIES SUMS
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   SUM OVER MOLECULAR LINES OF THE SQUARE ROOT OF
!                THE LINE STRENGTHS TIMES THE COLUMN AMOUNTS
!                ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ/COLLISION LINE WIDTHS TIMES
!                OPTICAL DEPTHS [CM-1].
      SUMDEP=0.
      SMROOT=0.
      SUMDOP=0.
      SUMLOR=0.

!     INITIALIZE BAND MODEL TRANSMISSION AND MINIMUM LINE SPACING:
      TRNTOT=1.
      SPACMN=1./IBNDWD

!     LOOP OVER BAND MODEL MOLECULAR SPECIES
!       1=H2O    2=CO2    3=O3     4=N2O    5=CO     6=CH4
!       7=O2     8=NO     9=SO2   10=NO2   11=NH3   12=HNO3
      DO MOLSPC=1,NMOL

!           COLAMT   SPECIES COLUMN DENSITY [ATM CM]
          COLAMT=WPATHS(LAYER,KPOINT(MOLSPC))
          IF(COLAMT.GT.0.)THEN

!             FETCH TEMPERATURE INTERPOLATION PARAMETERS
!               INDTLO   LOWER TEMPERATURE INDEX
!               INDTHI   HIGHER TEMPERATURE INDEX
!               TMPFAC   INTERPOLATION FACTOR(=0 FOR HIGHER TEMPERATURE)
!                                            (=1 FOR LOWER TEMPERATURE)
              INDTHI=JJS(LAYER,MOLSPC)
              INDTLO=INDTHI-1
              TMPFAC=FFS(LAYER,MOLSPC)

!             LINE CENTER CONTRIBUTIONS
              IF(SD(1,MOLSPC,0).GT.0.)THEN

!                 MOLSPC HAS LINES CENTERED IN THE CURRENT SPECTRAL
!                 INTERVAL.  INTERPOLATE THE BAND MODEL DATA OVER
!                 TEMPERATURE.
!                   ABCOEF   ABSORPTION COEFFICIENT [ATM-1 CM-1]
!                   OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH
!                   SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM]
                  ABCOEF=SD(INDTHI,MOLSPC,0)
                  ABCOEF=ABCOEF+TMPFAC*(SD(INDTLO,MOLSPC,0)-ABCOEF)
                  OPTDEP=ABCOEF*COLAMT
                  SUMDEP=SUMDEP+OPTDEP
                  SPCLIN=OD(INDTHI,MOLSPC)
                  SPCLIN=SPCLIN+TMPFAC*(OD(INDTLO,MOLSPC)-SPCLIN)
                  IF(SPCLIN.LT.SPACMN)SPACMN=SPCLIN
                  SMROOT=SMROOT+SQRT(OPTDEP*SPCLIN)
                  ALFDOP=T5S(LAYER,MOLSPC)*DOP0(MOLSPC)
                  SUMDOP=SUMDOP+OPTDEP*ALFDOP

!                 THE LORENTZ/COLLISION HALF-WIDTH FOR CO2 IS
!                 ASSUMED TO VARY WITH TEMPERATURE TO THE NEGATIVE
!                 3/4 POWER; FOR ALL OTHER MOLECULES, A TEMPERATURE
!                 TO THE MINUS ONE-HALF POWER VARIATION IS ASSUMED.
                  ALFLOR=PTM75S(LAYER,MOLSPC)*ALF0(MOLSPC)
                  SUMLOR=SUMLOR+OPTDEP*ALFLOR

!                 CALCULATE THE BAND MODEL TRANSMITTANCE
                  IF(OPTDEP.LT..001)THEN
                      TRNTOT=TRNTOT*(1.-OPTDEP)
                  ELSE
                      WIDDOP=SPCLIN*ALFDOP
                      WIDLOR=SPCLIN*ALFLOR
                      TRNTOT=TRNTOT*BMTRN(OPTDEP,SPCLIN,WIDDOP,WIDLOR)
                  ENDIF
              ENDIF

!             LINE TAIL (TO 25 CM-1 FROM LINE CENTER) CONTRIBUTIONS.
!               TAIL25   LINE TAIL BAND MODEL PARAMETER [ATM-1 CM-1]
              IF(SD(1,MOLSPC,1).GT.0.)THEN
                  COLAMT=COLAMT*PATMS(LAYER,MOLSPC)
                  DO ITLSUB=1,NTLSUB
                      TAIL25=SD(INDTHI,MOLSPC,ITLSUB)
                      TAIL25=TAIL25                                     &
     &                  +TMPFAC*(SD(INDTLO,MOLSPC,ITLSUB)-TAIL25)
                      SMCONT(ITLSUB)=SMCONT(ITLSUB)+TAIL25*COLAMT
                  ENDDO
              ENDIF
          ENDIF
      ENDDO

!     COMPUTE CORRELATED-K EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES.
      CALL CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                           &
     &  TRNTOT,KNTRVL,SPACMN,SMCONT)
      LAYTOP=LAYER-LAYTWO
      IF(LAYTOP.LE.0)RETURN

!     FOR MULTIPLE SCATTERING, STORE THE FRACTIONAL DECREASE IN
!     WEAK-LINE OPTICAL DEPTH TO THE SUN ACROSS THE CURRENT LAYER.
      DO INTRVL=1,KNTRVL
          DEPRAT(INTRVL,LAYTOP)=DEPLAY(INTRVL)
          IF(LAYTOP.GT.1)THEN
              LAYBOT=LAYTOP-1
              IF((DEPRAT(INTRVL,LAYBOT).LT.DEPRAT(INTRVL,LAYTOP) .OR.   &
     &          DEPRAT(INTRVL,LAYTOP).LT.0.) .AND. LWARN)THEN
                  LWARN=.FALSE.
                  WRITE(IPR,'(/2A,/(10X,2A,I3,A,1P,E10.3))')            &
     &              ' WARNING:  WEAK-LINE OPTICAL DEPTH TO THE SUN',    &
     &              ' IS NEGATIVE OR DECREASING WITH ALTITUDE.',' THE', &
     &              ' DEPTH TO THE SUN FROM THE BOTTOM OF LAYER',LAYBOT,&
     &              ' IS',DEPRAT(INTRVL,LAYBOT),' THE DEPTH TO THE SUN',&
     &              ' FROM THE TOP    OF LAYER',LAYBOT,' IS',           &
     &              DEPRAT(INTRVL,LAYTOP),' THIS CAN HAPPEN IF, FOR',   &
     &              ' EXAMPLE, THERE IS A CLOUD LAYER AND A LOW SUN.'
              ENDIF
              IF(DEPRAT(INTRVL,LAYBOT).GT.0.)DEPRAT(INTRVL,LAYBOT)      &
     &          =1.-DEPRAT(INTRVL,LAYTOP)/DEPRAT(INTRVL,LAYBOT)
          ENDIF
      ENDDO
      RETURN
      END
      SUBROUTINE CORK(KNTRVL,SUMDEP,RLINES,AVGDOP,AVGLOR,TRNTOT)

!     THIS ROUTINE IS THE DRIVER FOR DETERMINING CORRELATED-K OPTICAL
!     DEPTHS AND TRANSMITTANCES FROM LAYER BAND MODEL PARAMETERS.

!     INPUTS:
!       KNTRVL   NUMBER OF CORRELATED K'S PER SPECTRAL INTERVAL.
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       RLINES   LAYER EFFECTIVE NUMBER OF LINES.
!       AVGDOP   LAYER DOPPLER LINE WIDTH [CM-1].
!       AVGLOR   LAYER LORENTZ/COLLISION LINE WIDTH [CM-1].
!       TRNTOT   BAND MODEL SINGLE LAYER TOTAL TRANSMITTANCE.
      INTEGER KNTRVL
      REAL SUMDEP,RLINES,AVGDOP,AVGLOR,TRNTOT

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      INCLUDE 'ERROR.h'

!     LOCAL VARIABLES:
      INTEGER INTRVL,IKSUB,ITER
      REAL TRN0,TRN1,TRN2,DELTRN,SCALE,TERM,ARG,DTRN2

!     COMMON /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS
!       TRNLAY   INCREMENTAL TRANSMITTANCES
!       TRNCUM   CUMULATIVE TRANSMITTANCES
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB,DEPLAY,TRNLAY,TRNCUM,CONTWT
      INTEGER K2TAIL
      COMMON/CORKDT/WTKSUB(MXKSUB),DEPLAY(MXKSUB),TRNLAY(MXKSUB),       &
     &  TRNCUM(MXKSUB),K2TAIL(MXKSUB),CONTWT(MTLSUB,MXKSUB)
      SAVE /CORKDT/

!     LOCAL ARRAYS:
      REAL AK(0:MXKSUB)
      CALL KNTRP(KNTRVL,AVGLOR,AVGDOP,RLINES,AK)
      CALL KDIS(KNTRVL,AK,SUMDEP,TRN0,TRN1,TRN2)
      ITER=0
   10 CONTINUE
      DELTRN=TRNTOT-TRN0
      IF(ABS(DELTRN).LT..001)RETURN

!     SCALE ABSORPTION COEFFICIENTS TO MATCH MODTRAN TRANSMITTANCE.
      ITER=ITER+1
      IF(ITER.GE.12)THEN
          IF(LJMASS)CALL WRTBUF(FATAL)
          STOP 'ERROR in routine CORK:  Too many iterations.'
      ENDIF
      DTRN2=2*DELTRN
      ARG=TRN1**2+TRN2*DTRN2
      IF(ARG.GT.0.)THEN
          SCALE=1.-DTRN2/(TRN1+SQRT(ARG))
          IF(SCALE.GT.1.5)THEN
              SCALE=1.5
          ELSEIF(SCALE.LT..5)THEN
              SCALE=0.5
          ENDIF
      ELSEIF(TRN1.GT.0.)THEN
          SCALE=1.-DELTRN/TRN1
          IF(SCALE.GT.1.5)THEN
              SCALE=1.5
          ELSEIF(SCALE.LT..5)THEN
              SCALE=0.5
          ENDIF
      ELSEIF(DELTRN.GT.0.)THEN
          SCALE=0.5
      ELSE
          SCALE=1.5
      ENDIF
      TRN0=0.
      TRN1=0.
      TRN2=0.
      DO INTRVL=1,KNTRVL
          DEPLAY(INTRVL)=SCALE*DEPLAY(INTRVL)
          TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          TERM=WTKSUB(INTRVL)*TRNLAY(INTRVL)
          TRN0=TRN0+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN1=TRN1+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN2=TRN2+TERM
          IF(TRNLAY(INTRVL).LT.5.E-9)GOTO 20
      ENDDO
      GOTO 10
   20 CONTINUE
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,KNTRVL
          DEPLAY(INTRVL)=SCALE*DEPLAY(INTRVL)
          TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          IF(TRNLAY(INTRVL).LE.0.)GOTO 30
      ENDDO
      GOTO 10
   30 CONTINUE
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,KNTRVL
          DEPLAY(INTRVL)=SCALE*DEPLAY(INTRVL)
          TRNLAY(INTRVL)=0.
      ENDDO
      GOTO 10
      END
      SUBROUTINE KNTRP(KNTRVL,AVGLOR,AVGDOP,RLINES,AK)

!     THIS ROUTINE PERFORMS INTERPOLATION OF THE K-DISTRIBUTION TABLE.

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     I/O VARIABLES:

!     INPUTS
!       KNTRVL   NUMBER OF CORRELATED K'S PER SPECTRAL INTERVAL.
!       AVGLOR   LORENTZ HALF-WIDTH [CM-1].
!       AVGDOP   DOPPLER HALF-WIDTH [CM-1].
!       RLINES   EFFECTIVE NUMBER OF LINES.

!     OUTPUTS
!       AK       NORMALIZED ABSORPTION COEFFICIENTS AT
!                SUB-INTERVAL BOUNDARIES [DIMENSIONLESS]
      INTEGER KNTRVL
      REAL AVGLOR,AVGDOP,RLINES,AK(0:MXKSUB)

!     COMMON /CORKTB/
!       GAMLIN   LORENTZ HALF-WIDTH BOUNDARY VALUES [CM-1].
!       GAMDIN   DOPPLER HALF-WIDTH BOUNDARY VALUES [CM-1].
!       RLININ   EFFECTIVE NUMBER OF LINES BOUNDARY VALUES.
!       VAL      ABSORPTION COEFFICIENT TABLE [ATM-1 CM-1].
      INTEGER NGAML,NGAMD,NNUML
      REAL GAMLIN,GAMDIN,RLININ,VAL
      COMMON/CORKTB/NGAML,NGAMD,NNUML,GAMLIN(MXGAML),GAMDIN(MXGAMD),    &
     &  RLININ(MXNUML),VAL(1:MXGAML,1:MXGAMD,1:MXNUML,0:MXKSUB)
      SAVE /CORKTB/
      INCLUDE 'IFIL.h'

!     LOCAL VARIABLES:
      INTEGER IGAML,JGAML,IGAMD,JGAMD,ILINE,JLINE,INTRVL
      REAL SLOPE,WI,WJ,WII,WIJ,WJI,WJJ
      LOGICAL LLORMN,LDOPMN,LLORMX,LDOPMX,LLINMN
      SAVE LLORMN,LDOPMN,LLORMX,LDOPMX,LLINMN

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     DATA:
      DATA LLORMN,LDOPMN,LLORMX,LDOPMX,LLINMN/5*.TRUE./

!     LORENTZ HALF-WIDTH INTERPOLATION INDICES.
      IGAML=1
      IF(AVGLOR.GT.GAMLIN(1))THEN
          JGAML=1
          IF(LLORMX)THEN
              WRITE(IPR,'(2A,2(F10.6,A),/11X,A)')' WARNING:  LORENTZ ', &
     &          'HALF-WIDTH =',AVGLOR,' CM-1 EXCEEDS K-TABLE MAXIMUM =',&
     &          GAMLIN(1),' CM-1.','(THIS WARNING WILL NOT BE REPEATED)'
              LLORMX=.FALSE.
          ENDIF
          GOTO 10
      ENDIF
      DO JGAML=2,NGAML
          IF(GAMLIN(JGAML).LE.AVGLOR)GOTO 10
          IGAML=JGAML
      ENDDO
      JGAML=NGAML

!     IF AVGLOR < GAMLIN(NGAML), THE GAMLIN(NGAML) VALUES ARE USED.
      IF(LLORMN)THEN
          WRITE(IPR,'(/2(2A,F11.8),A,/(11X,2A))')' WARNING:  LORENTZ',  &
     &      ' HALF-WIDTH =',AVGLOR,' CM-1 IS LESS THAN THE TABLE',      &
     &      ' MINIMUM VALUE OF',GAMLIN(NGAML),' CM-1.','K-DISTRIBUTION',&
     &      ' INTERPOLATION WILL BE BASED ON THE TABLE MINIMUM VALUE.', &
     &      '     ***  THIS WARNING WILL NOT BE REPEATED  ***'
          LLORMN=.FALSE.
      ENDIF
   10 CONTINUE

!     DOPPLER HALF-WIDTH INTERPOLATION INDICES.
      IGAMD=1
      IF(AVGDOP.GT.GAMDIN(1))THEN
          JGAMD=1
          IF(LDOPMX)THEN
              WRITE(IPR,'(2A,2(F10.6,A),/11X,A)')' WARNING:  DOPPLER ', &
     &          'HALF-WIDTH =',AVGDOP,' CM-1 EXCEEDS K-TABLE MAXIMUM =',&
     &          GAMDIN(1),' CM-1.','(THIS WARNING WILL NOT BE REPEATED)'
              LDOPMX=.FALSE.
          ENDIF
          GOTO 20
      ENDIF
      DO JGAMD=2,NGAMD
          IF(GAMDIN(JGAMD).LE.AVGDOP)GOTO 20
          IGAMD=JGAMD
      ENDDO
      JGAMD=NGAMD

!     IF AVGDOP < GAMDIN(NGAMD), THE GAMDIN(NGAMD) VALUES ARE USED.
      IF(LDOPMN)THEN
          WRITE(IPR,'(/2(2A,F11.8),A,/(11X,2A))')' WARNING:  DOPPLER',  &
     &      ' HALF-WIDTH =',AVGDOP,' CM-1 IS LESS THAN THE TABLE',      &
     &      ' MINIMUM VALUE OF',GAMDIN(NGAMD),' CM-1.','K-DISTRIBUTION',&
     &      ' INTERPOLATION WILL BE BASED ON THE TABLE MINIMUM VALUE.', &
     &      '     ***  THIS WARNING WILL NOT BE REPEATED  ***'
          LDOPMN=.FALSE.
      ENDIF
   20 CONTINUE

!     EFFECTIVE NUMBER OF LINES INTERPOLATION INDICES.  [IF RLINES
!     EXCEEDS RLININ(NNUML), THE RLININ(NNUML) VALUES ARE USED.]
      ILINE=1
      IF(RLINES.LT.RLININ(1)-.00001)THEN
          IF(LLINMN)THEN
              WRITE(IPR,'(3(A,1P,E11.4))')                              &
     &          ' WARNING from KNTRP:  EFFECTIVE NUMBER OF LINES =',    &
     &          RLINES,' IS LESS THAN',RLININ(1)
              LLINMN=.FALSE.
          ENDIF
          JLINE=1
          RLINES=RLININ(1)
          GOTO 30
      ENDIF
      DO JLINE=2,NNUML
          IF(RLININ(JLINE).GE.RLINES)GOTO 30
          ILINE=JLINE
      ENDDO
      JLINE=NNUML
   30 CONTINUE

!     ABSORPTION COEFFICIENTS
      DO INTRVL=0,KNTRVL

!         LINEARLY INTERPOLATE OVER THE LORENTZ HALF-WIDTHS.
          WII=VAL(IGAML,IGAMD,ILINE,INTRVL)
          WJI=VAL(IGAML,JGAMD,ILINE,INTRVL)
          WIJ=VAL(IGAML,IGAMD,JLINE,INTRVL)
          WJJ=VAL(IGAML,JGAMD,JLINE,INTRVL)
          IF(GAMLIN(IGAML).NE.GAMLIN(JGAML))THEN
              SLOPE=(AVGLOR-GAMLIN(IGAML))/(GAMLIN(JGAML)-GAMLIN(IGAML))
              WII=WII+SLOPE*(VAL(JGAML,IGAMD,ILINE,INTRVL)-WII)
              WJI=WJI+SLOPE*(VAL(JGAML,JGAMD,ILINE,INTRVL)-WJI)
              WIJ=WIJ+SLOPE*(VAL(JGAML,IGAMD,JLINE,INTRVL)-WIJ)
              WJJ=WJJ+SLOPE*(VAL(JGAML,JGAMD,JLINE,INTRVL)-WJJ)
          ENDIF

!         LINEARLY INTERPOLATE OVER THE DOPPLER HALF-WIDTHS.
          WI=WII
          WJ=WIJ
          IF(GAMDIN(IGAMD).NE.GAMDIN(JGAMD))THEN
              SLOPE=(AVGDOP-GAMDIN(IGAMD))/(GAMDIN(JGAMD)-GAMDIN(IGAMD))
              WI=WII+SLOPE*(WJI-WII)
              WJ=WIJ+SLOPE*(WJJ-WIJ)
          ENDIF

!         LINEARLY INTERPOLATE OVER THE EFFECTIVE NUMBER OF LINES.
          AK(INTRVL)=WI
          IF(RLININ(ILINE).NE.RLININ(JLINE))THEN
              SLOPE=(RLINES-RLININ(ILINE))/(RLININ(JLINE)-RLININ(ILINE))
              AK(INTRVL)=WI+SLOPE*(WJ-WI)
          ENDIF
      ENDDO
      RETURN
      END
      SUBROUTINE KDIS(KNTRVL,AK,SUMDEP,TRN0,TRN1,TRN2)

!     ROUTINE TO CALCULATE K-DISTRIBUTION SUB-INTERVAL TRANSMITTANCES,
!     TRNLAY, AND OPTICAL DEPTHS, DEPLAY.  FOR SUB-INTERVAL I,

!                                       G(I)
!                             1          /      - K(G) X
!       TRNLAY(I)   =   -------------    |     e          dG
!                       G(I) - G(I-1)    /
!                                      G(I-1)

!     THE WEAK-LINE OPTICAL DEPTH, K(G)*X, IS ASSUMED TO VARY EXPONEN-
!     TIALLY WITH G FROM AK(I-1)*SUMDEP(I-1) TO AK(I)*SUMDEP(I).  THUS,

!                       E [AK(I-1) SUMDEP(I-1)]  -  E [AK(I) SUMDEP(I)]
!                        1                           1
!       TRNLAY(I)   =   -----------------------------------------------
!                       LN[AK(I) SUMDEP(I)]  -  LN[AK(I-1) SUMDEP(I-1)]

!     WHERE E1 IS THE FIRST ORDER EXPONENTIAL INTEGRAL.  THE OPTICAL
!     DEPTH FOR THE SUB-INTERVAL IS DEFINED BY DEPLAY(I)=-LN[TRNLAY(I)].

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     I/O VARIABLES:

!     INPUTS
!       KNTRVL   NUMBER OF CORRELATED K'S PER SPECTRAL INTERVAL.
!       AK       NORMALIZED ABSORPTION COEFFICIENTS AT
!                SUB-INTERVAL BOUNDARIES [DIMENSIONLESS].
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.

!     OUTPUTS (USED FOR FITTING TOTAL TRANSMITTANCE)
!       TRN0     TOTAL LAYER TRANSMITTANCE
!       TRN1     TOTAL LAYER TRANSMITTANCE FIRST MOMENT
!       TRN2     TOTAL LAYER TRANSMITTANCE SECOND MOMENT

      INTEGER KNTRVL
      REAL AK(0:MXKSUB),SUMDEP,TRN0,TRN1,TRN2

!     COMMON /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS
!       TRNLAY   INCREMENTAL TRANSMITTANCES
!       TRNCUM   CUMULATIVE TRANSMITTANCES
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB,DEPLAY,TRNLAY,TRNCUM,CONTWT
      INTEGER K2TAIL
      COMMON/CORKDT/WTKSUB(MXKSUB),DEPLAY(MXKSUB),TRNLAY(MXKSUB),       &
     &  TRNCUM(MXKSUB),K2TAIL(MXKSUB),CONTWT(MTLSUB,MXKSUB)
      SAVE /CORKDT/

!     FUNCTIONS:
      DOUBLE PRECISION E1

!     LOCAL VARIABLES:
      INTEGER INTRVL,IKSUB
      LOGICAL LE1X1
      REAL AKSTOR,X1,X2,AKRAT,WEAK,EXPAN,TERM
      DOUBLE PRECISION E1X1,E1X2
      AKSTOR=AK(0)
      X1=AKSTOR*SUMDEP
      TRN0=0.
      TRN1=0.
      TRN2=0.
      DO INTRVL=1,KNTRVL
          X2=AK(INTRVL)*SUMDEP
          IF(X2.GT..002)GOTO 10
          AKRAT=AK(INTRVL)/AKSTOR
          IF(AKRAT.LT.1.02)THEN
              DEPLAY(INTRVL)=.5*(X1+X2)
              TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          ELSE

!             WEAK-LINE LIMIT
              WEAK=(X2-X1)/LOG(AKRAT)
              EXPAN=1-.25*(X2+X1)
              TRNLAY(INTRVL)=1.-WEAK*EXPAN
              DEPLAY(INTRVL)=WEAK*(EXPAN+.5*WEAK)
          ENDIF
          TERM=WTKSUB(INTRVL)*TRNLAY(INTRVL)
          TRN0=TRN0+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN1=TRN1+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN2=TRN2+TERM
          AKSTOR=AK(INTRVL)
          X1=X2
      ENDDO
      RETURN
   10 CONTINUE
      IKSUB=INTRVL
      LE1X1=.TRUE.
      DO INTRVL=IKSUB,KNTRVL
          X2=AK(INTRVL)*SUMDEP
          AKRAT=AK(INTRVL)/AKSTOR
          IF(AKRAT.LT.1.02)THEN
              DEPLAY(INTRVL)=.5*(X1+X2)
              TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
              LE1X1=.TRUE.
          ELSE
              IF(LE1X1)E1X1=E1(X1)
              E1X2=E1(X2)
              TRNLAY(INTRVL)=REAL(E1X1-E1X2)/LOG(AKRAT)
              IF(TRNLAY(INTRVL).LT.5.E-9)GOTO 20
              DEPLAY(INTRVL)=-LOG(TRNLAY(INTRVL))
              LE1X1=.FALSE.
              E1X1=E1X2
          ENDIF
          TERM=WTKSUB(INTRVL)*TRNLAY(INTRVL)
          TRN0=TRN0+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN1=TRN1+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN2=TRN2+TERM
          AKSTOR=AK(INTRVL)
          X1=X2
      ENDDO
      RETURN
   20 CONTINUE
      DEPLAY(INTRVL)=.5*(X1+X2)
      TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,KNTRVL
          X1=X2
          X2=AK(INTRVL)*SUMDEP
          DEPLAY(INTRVL)=.5*(X1+X2)
          TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          IF(TRNLAY(INTRVL).LE.0.)GOTO 30
      ENDDO
      RETURN
   30 CONTINUE
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,KNTRVL
          X1=X2
          X2=AK(INTRVL)*SUMDEP
          DEPLAY(INTRVL)=.5*(X1+X2)
          TRNLAY(INTRVL)=0.
      ENDDO
      END
      DOUBLE PRECISION FUNCTION E1(Z)

!     EXPONENTIAL INTEGRAL (E1) APPROXIMATIONS FROM ABRAMOWITZ & STEGUN

!     ARGUMENTS:
!       Z        SINGLE PRECISION ARGUMENT
      REAL Z

!     PARAMETERS:
      DOUBLE PRECISION A0,A1,A2,A3,A4,A5,B1,B2,B3,B4,C1,C2,C3,C4
      PARAMETER(A0=-.57721566D0,A1= .99999193D0,A2=-.24991055D0,        &
     &          A3= .05519968D0,A4=-.00976004D0,A5= .00107857D0,        &
     &          B1= 8.5733287401D0,B2=18.0590169730D0,                  &
     &          B3= 8.6347608925D0,B4= 0.2677737343D0,                  &
     &          C1= 9.5733223454D0,C2=25.6329561486D0,                  &
     &          C3=21.0996530827D0,C4= 3.9584969228D0)

!     LOCAL VARIABLES:
!       DZ       DOUBLE PRECISION ARGUMENT.
      DOUBLE PRECISION DZ
      DZ=DBLE(Z)
      IF(DZ.LE.1.)THEN
          E1=A0-LOG(DZ)+DZ*(A1+DZ*(A2+DZ*(A3+DZ*(A4+DZ*A5))))
      ELSEIF(DZ.LT.30.)THEN
          E1=(B4/DZ+B3+DZ*(B2+DZ*(B1+DZ)))*EXP(-DZ)                     &
     &      /(C4+DZ*(C3+DZ*(C2+DZ*(C1+DZ))))
      ELSE
          E1=3.02155D-15
      ENDIF
      RETURN
      END
      SUBROUTINE CHKSPC(SUMDEP,AVGSPC,AVGDOP,AVGLOR,TRNTOT,SPACMN)

!     THIS ROUTINE CHECKS IF THE CURRENT BAND MODEL PARAMETERS RESULT
!     IN A TRANSMITTANCE WITHIN "TOL" OF TRNTOT.  IF NOT, THE AVERAGE
!     SPACING BAND MODEL PARAMETER IS MODIFIED UNTIL AGREEMENT.

!     PARAMETERS:
      INCLUDE 'ERROR.h'

!     INPUTS:
!       SUMDEP   WEAK-LINE OPTICAL DEPTH
!       AVGSPC   LAYER LINE SPACING BAND MODEL PARAMETER [CM].
!       AVGDOP   LAYER DOPPLER LINE WIDTH [CM-1].
!       AVGLOR   LAYER LORENTZ/COLLISION LINE WIDTH [CM-1].
!       TRNTOT   BAND MODEL SINGLE LAYER TOTAL TRANSMITTANCE.
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
      REAL SUMDEP,AVGSPC,AVGDOP,AVGLOR,TRNTOT,SPACMN

!     LOCAL VARIABLES:
      INTEGER ITER
      REAL WIDDOP,WIDLOR,TRN,SPACMX

!     EXTERNAL FUNCTIONS:
      REAL BMTRN

!     DATA:
!       TOL      TRANSMITTANCE TOLERANCE
      REAL TOL
      DATA TOL/.001/

!     CALCULATE BAND MODEL TRANSMITTANCE
      ITER=0
   10 CONTINUE
      ITER=ITER+1
      WIDDOP=AVGDOP*AVGSPC
      WIDLOR=AVGLOR*AVGSPC
      TRN=BMTRN(SUMDEP,AVGSPC,WIDDOP,WIDLOR)
      IF(TRN-TRNTOT.GT.TOL)THEN

!         TRANSMISSION TOO HIGH SO AVGSPC IS TOO LOW.
!         DOUBLE AVGSPC TO GET A TRANSMITTANCE LOWER BOUND.
          IF(ITER.GT.3)THEN
              IF(LJMASS)CALL WRTBUF(FATAL)
              STOP 'ERROR in CHKSPC:  No transmittance lower bound.'
          ENDIF
          AVGSPC=2*AVGSPC
          GOTO10
      ENDIF
      IF(TRNTOT-TRN.GT..001)THEN

!         DETERMINE TRANSMITTANCE UPPER BOUND.
          SPACMX=AVGSPC
   20     CONTINUE
          ITER=ITER+1
          WIDDOP=AVGDOP*SPACMN
          WIDLOR=AVGLOR*SPACMN
          TRN=BMTRN(SUMDEP,SPACMN,WIDDOP,WIDLOR)
          IF(TRN-TRNTOT.LT.TOL)THEN
              IF(TRNTOT-TRN.GT.TOL)THEN

!                 TRANSMISSION TOO LOW SO AVGSPC IS TOO HIGH.
!                 CUT SPACMN IN HALF TO GET A TRANSMITTANCE UPPER BOUND.
                  IF(ITER.GT.3)THEN
                      IF(LJMASS)CALL WRTBUF(FATAL)
                      STOP                                              &
     &                  'ERROR in CHKSPC: No transmittance upper bound.'
                  ENDIF
                  SPACMN=SPACMN/2
                  GOTO 20
              ENDIF

!             TRNTOT ESSENTIALLY EQUAL MAXIMUM TRANSMITTANCE
              AVGSPC=SPACMN
          ELSE

!             USE BISECTION METHOD TO DETERMINE
!             LINE SPACING THAT MATCHES TRNTOT.
              ITER=0
   30         CONTINUE
              ITER=ITER+1
              AVGSPC=.5*(SPACMN+SPACMX)
              WIDDOP=AVGDOP*AVGSPC
              WIDLOR=AVGLOR*AVGSPC
              TRN=BMTRN(SUMDEP,AVGSPC,WIDDOP,WIDLOR)
              IF(TRN-TRNTOT.GT..001)THEN

!                 TRN TOO HIGH, AVGSPC TOO LOW
                  SPACMN=AVGSPC
                  IF(ITER.LT.20)GOTO 30
                  IF(LJMASS)CALL WRTBUF(FATAL)
                  STOP 'ERROR in CHKSPC:  Too many iterations.'
              ELSEIF(TRNTOT-TRN.GT..001)THEN

!                 TRN TOO LOW, AVGSPC TOO HIGH
                  SPACMX=AVGSPC
                  IF(ITER.LT.20)GOTO 30
                  IF(LJMASS)CALL WRTBUF(FATAL)
                  STOP 'ERROR in CHKSPC:  Too many iterations.'
              ENDIF
          ENDIF
      ENDIF
      RETURN
      END
