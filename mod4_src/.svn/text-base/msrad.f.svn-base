      SUBROUTINE MSRAD(V,S0,KNTRVL,NUM_LRES,SOLAR_FLUX,DIFFUSE_FLUX,    &
     &  NUM_LEVS,FLX_UPDIFFUSE,FLX_DNDIFFUSE,FLX_DNDIRECT)

!     ROUTINE MSRAD SETS UP OPTICAL PROPERTIES PROFILES FOR VERTICAL
!     PATH THEN CALLS DISORT WHICH RETURNS MS SOURCE FUNCTIONS.

!     INPUT ARGUMENTS:
!       V       SPECTRAL FREQUENCY [CM-1].
!       S0      TOP-OF-ATMOSPHERE SOLAR/LUNAR SPECTRAL
!               IRRADIANCE [W CM-2 / CM-1].
!       KNTRVL  NUMBER OF CORRELATED-K INTERVAL PER SPECTRAL BIN.
      INTEGER KNTRVL
      REAL V,S0

!     PARAMETERS:
!       MAXUMU  MAXIMUM NUMBER OF LINE-OF-SIGHT NADIR ANGLES.
!       MAXPHI  MAXIMUM NUMBER OF LINE-OF-SIGHT AZIMUTH ANGLES.
!       MAXCMU  MAXIMUM NUMBER OF DISCRETE ORDINATE STREAMS.
      INCLUDE 'PARAMS.h'
      INTEGER MAXUMU,MAXPHI,MAXCMU
      PARAMETER(MAXUMU=2,MAXPHI=1,MAXCMU=16)

!     COMMONS:
      INCLUDE 'IFIL.h'

!       SUBINT   SPECTRAL BIN "K" SUB-INTERVAL FRACTIONAL WIDTHS.
!       UPFLX    LAYER BOUNDARY UPWARD THERMAL SPECTRAL
!                FLUX (INCLUDES SCATTERED SOLAR IF DISORT
!                & NO AZIMUTH DEPENDENCE) [W CM-2 / CM-1].
!       DNFLX    LAYER BOUNDARY DOWNWARD THERMAL SPECTRAL
!                FLUX (INCLUDES SCATTERED SOLAR IF DISORT
!                & NO AZIMUTH DEPENDENCE) [W CM-2 / CM-1].
!       UPFLXS   LAYER BOUNDARY UPWARD SCATTERED SOLAR
!                SPECTRAL FLUX (USED WITH DISORT ONLY
!                IF AZIMUTH DEPENDENT) [W CM-2 / CM-1].
!       DNFLXS   LAYER BOUNDARY DOWNWARD SCATTERED SOLAR
!                SPECTRAL FLUX (USED WITH DISORT ONLY
!                IF AZIMUTH DEPENDENT) [W CM-2 / CM-1].
!       NTFLX    LAYER BOUNDARY NET (THERMAL PLUS SCATTERED SOLAR PLUS
!                DIRECT SOLAR) UPWARD SPECTRAL FLUX [W CM-2 / CM-1].
      REAL SUBINT,UPFLX,DNFLX,UPFLXS,DNFLXS,NTFLX
      COMMON/NETFLX/SUBINT(MXKSUB),UPFLX(LAYDIM),DNFLX(LAYDIM),         &
     &  UPFLXS(LAYDIM),DNFLXS(LAYDIM),NTFLX(LAYDIM)

!     /CNTRL/
!       IKMAX    NUMBER OF PATH SEGMENTS ALONG LINE-OF-SIGHT.
!       ML       NUMBER OF ATMOSPHERIC PROFILE LEVELS.
!       MLFLX    NUMBER OF LEVELS FOR WHICH FLUX VALUES ARE WRITTEN.
!       ISSGEO   LINE-OF-SIGHT FLAG (0 = SENSOR PATH, 1 = SOLAR PATHS).
!       IMULT    MULTIPLE SCATTERING FLAG
!                  (0=NONE, 1=AT SENSOR, -1=AT FINAL OR TANGENT POINT).
      INTEGER IKMAX,ML,MLFLX,ISSGEO,IMULT
      COMMON/CNTRL/IKMAX,ML,MLFLX,ISSGEO,IMULT

!     /WTFLX/
!       NFLUX   SPECTRAL BIN COUNTER FOR FLUX TABLE.
!       UPDIFF  BOUNDARY UPWARD DIFFUSE SPECTRAL FLUX [W CM-2 / CM-1].
!       DNDIFF  BOUNDARY DOWNWARD DIFFUSE SPECTRAL FLUX [W CM-2 / CM-1].
!       DNDRCT  BOUNDARY DIRECT SOLAR SPECTRAL FLUX [W CM-2 / CM-1].
!       NTERMS  NUMBER OF TERMS IN FLUX SPECTRAL SUM.
!       SMUPDF  LAYER BOUNDARY UPWARD DIFFUSE IN-BAND FLUX [W CM-2].
!       SMDNDF  LAYER BOUNDARY DOWNWARD DIFFUSE IN-BAND FLUX [W CM-2].
!       SMDNDR  LAYER BOUNDARY DIRECT SOLAR IN-BAND FLUX [W CM-2].
      INTEGER NFLUX,NTERMS
      REAL UPDIFF,DNDIFF,DNDRCT,SMUPDF,SMDNDF,SMDNDR
      COMMON/WTFLX/NFLUX,UPDIFF(0:NBINS,1:LAYDIM),                      &
     &  DNDIFF(0:NBINS,1:LAYDIM),DNDRCT(0:NBINS,1:LAYDIM),              &
     &  NTERMS,SMUPDF(LAYDIM),SMDNDF(LAYDIM),SMDNDR(LAYDIM)

!     /MSRD/
!       CSSCAT   COSINE OF THE SCATTERING ANGLE.
!                (AT H1 IF IMULT=1; AT OR "NEAR" H2 IF IMULT=-1)
!       SLEGEN   Nth LEGENDRE POLYNOMIAL EVALUATED AT THE COSINE OF THE
!                SCATTERING ANGLE TIMES (2N+1)/4pi (N=0 TO NSTR-1).
!       CSZEN0   LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.
!       CSZEN    LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.
!       CSZENX   AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING
!                (AWAY FROM EARTH) THE CURRENT LAYER.
!       BBGRND   THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].
!       BBNDRY   LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1].
!       TCONT    LAYER CONTINUUM OPTICAL DEPTH.
!       TAUT     LAYER TOTAL OPTICAL DEPTH.
!       GTSCAT   SUM OVER SCATTERING SOURCES OF SCATTERING OPTICAL DEPTH
!                AND PHASE FUNCTION LEGENDRE COEFFICIENT PRODUCTS.
!       COSBAR   LAYER EFFECTIVE SCATTERING ASYMMETRY FACTOR.
!       DEPRAT   FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.
!       S0DEP    OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.
!       S0TRN    TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]
!       UPF      LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].
!       DNF      LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].
!       UPFS     LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].
!       DNFS     LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].
      REAL CSSCAT,SLEGEN,CSZEN0,CSZEN,CSZENX,TCONT,TAUT,GTSCAT,COSBAR,  &
     &  BBGRND,BBNDRY,S0DEP,S0TRN,DEPRAT,UPF,DNF,UPFS,DNFS
      COMMON/MSRD/CSSCAT,SLEGEN(0:MAZ),                                 &
     &  CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),TCONT(LAYDIM),      &
     &  TAUT(MXKSUB,LAYDIM),GTSCAT(0:MXCMU,1:LAYDIM),COSBAR(LAYDIM),    &
     &  BBGRND,BBNDRY(LAYDIM),S0DEP(MXKSUB,LAYTWO),S0TRN(MXKSUB,LAYTWO),&
     &  DEPRAT(MXKSUB,LAYDIM),UPF(MXKSUB,LAYDIM),DNF(MXKSUB,LAYDIM),    &
     &  UPFS(MXKSUB,LAYDIM),DNFS(MXKSUB,LAYDIM)

      !DRF
      INTEGER NUM_LRES
      REAL SOLAR_FLUX(NUM_LRES)
      REAL DIFFUSE_FLUX(NUM_LRES)
      INTEGER NUM_LEVS
      REAL FLX_UPDIFFUSE(NUM_LEVS,NUM_LRES)
      REAL FLX_DNDIFFUSE(NUM_LEVS,NUM_LRES) 
      REAL FLX_DNDIRECT(NUM_LEVS,NUM_LRES)
      !DRF

!     /ANGSRF/
!       CVWSRF  COSINE OF THEN VIEW ZENITH ANGLE FROM THE SURFACE [RAD].
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE [RAD].
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1 IF IMULT=1; AT OR "NEAR" H2 IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1 IF IMULT=1; AT OR "NEAR" H2 IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1 IF IMULT=1; AT OR "NEAR" H2 IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU(MI)

!     /CARD4/
!       IV1      LOWEST FREQUENCY OUTPUT [CM-1].
!       IV2      HIGHEST FREQUENCY OUTPUT [CM-1].
!       IDV      PRINTOUT FREQUENCY STEP SIZE [CM-1].
!       IFWHM    TRIANGULAR SLIT FULL-WIDTH-HALF-MAXIMUM [CM-1].
!       IVX      CURRENT COMPUTATION FREQUENCY [CM-1].
!       IVOFF    OFFSET BETWEEN COMPUTATION AND OUTPUT FREQUENCIES,
!                REQUIRED FOR SLIT FUNCTION [CM-1].
!       IWRITE   COMPUTATION FREQUENCY OF NEXT WRITE [CM-1].
!       NSPCDT   NUMBER OF OUTPUT SPECTRAL DATA POINTS.
!       NWGT     NUMBER OF SPECTRAL BINS CONTRIBUTING TO SLIT FUNCTION.
!       WGT      NORMALIZED WEIGHTS USED TO DEFINE THE SLIT FUNCTION.
      INTEGER IV1,IV2,IDV,IFWHM,IVX,IVOFF,IWRITE,NSPCDT,NWGT
      REAL WGT
      COMMON/CARD4/IV1,IV2,IDV,IFWHM,IVX,IVOFF,IWRITE,NSPCDT,           &
     &  NWGT,WGT(NBINS)

!     /MODEL/
!       ZM       PROFILE BOUNDARY ALTITUDES [KM].
!       PM       PROFILE BOUNDARY PRESSURES [MBAR].
!       TM       PROFILE BOUNDARY TEMPERATURES [K].
!       RFNDX    PROFILE BOUNDARY REFRACTIVITIES.
!       DENSTY   PROFILE BOUNDARY DENSITIES [UNITS DEPEND ON SPECIES].
!       LRHSET   FLAG, TRUE IF RELATIVE HUMIDITY CANNOT BE SCALED.
      REAL ZM,PM,TM,RFNDX,DENSTY
      LOGICAL LRHSET
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    &
     &  RFNDX(LAYDIM),DENSTY(MEXT,LAYDIM),LRHSET(LAYDIM)

!     COMMON/CFLAGS/
!       YFLAG    Y COORDINATE FLAG FOR PLOT.DAT FILE
!                  = "T" FOR TRANSMITTANCE
!                  = "R" FOR RADIANCE (IRRADIANCE FOR IEMSCT=3)
!                  = "N" FOR NO PLOT.DAT OUTPUT
!       XFLAG    X COORDINATE FLAG FOR PLOT.DAT FILE
!                  = "W" FOR FREQUENCY IN WAVENUMBERS (CM-1) AND
!                        RADIANCE IN W SR-1 CM-2 / CM-1
!                  = "M" FOR WAVELENGTH IN MICRONS AND
!                        RADIANCE IN W SR-1 CM-2 / MICRON
!                  = "N" FOR WAVELENGTH IN NANOMETERS AND
!                        RADIANCE IN MICRO-WATTS SR-1 CM-2 / NANOMETER
!       DLIMIT   DELIMITER CHARACTER STRING BETWEEN MODTRAN RUNS
!       FLAGS    SCANNING FUNCTION FLAGS.
      CHARACTER YFLAG*1,XFLAG*1,DLIMIT*8,FLAGS*7
      COMMON/CFLAGS/YFLAG,XFLAG,DLIMIT,FLAGS

!     /SURFWV/
!       LAMBER  LOGICAL FLAG, .TRUE. FOR LAMBERTIAN SURFACE.
!       TPTEMP  TARGET-PIXEL SURFACE TEMPERATURES [K].
!       TPHDIR  TARGET-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCE AT
!               VIEWING ANGLE.
!       TPBRDF  TARGET-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!               FUNCTION AT VIEWING AND SUN ANGLE.
!       AATEMP  AREA-AVERAGED GROUND SURFACE TEMPERATURES [K].
!       AASALB  AREA-AVERAGED GROUND SURFACE ALBEDO.
!       AADREF  AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!               AT THE SOLAR ZENITH ANGLE.
!       EMU     GROUND DIRECTIONAL EMISSIVITY AT VIEWING ANGLE.
!       BEM     GROUND DIRECTIONAL EMISSIVITY AT QUADRATURE ANGLE.
!       RMU     GROUND BRDF AZIMUTH COMPONENTS AT VIEWING ANGLE
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
!       BDR     GROUND BRDF AZIMUTH COMPONENTS AT QUADRATURE ANGLE
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
      LOGICAL LAMBER
      REAL TPTEMP,TPHDIR,TPBRDF,AATEMP,AASALB,AADREF,EMU,BEM,RMU,BDR
      COMMON/SURFWV/LAMBER,TPTEMP,TPHDIR,TPBRDF,AATEMP,AASALB,AADREF,   &
     &  EMU(MXUMU),BEM(MI),RMU(1:MXUMU,0:MI,0:MAZ),BDR(1:MI,0:MI,0:MAZ)

!     /DISRT/
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      INTEGER NSTR,NAZ,N2GAUS
      COMMON/DISRT/DIS,DISAZM,DISALB,LDISCL,NSTR,NAZ,N2GAUS

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       NTAU    ACTUAL NUMBER OF DISORT LAYER BOUNDARIES.
!       NLYR    ACTUAL NUMBER OF DISORT LAYERS (=NTAU-1).
!       IK      MODTRAN LAYER INDEX (=1 AT SURFACE).
!       IKP1    IK PLUS 1.
!       IKX     MODTRAN LAYER INDEX USED TO SUM OVER MERGED LAYERS.
!       NMERGE  NUMBER OF MODTRAN LAYERS MERGED INTO A DISORT LAYER.
!       ISTR    INDEX USED TO LOOP OVER NUMBER OF STREAMS.
!       IHIFLX  MAPPING FROM MODTRAN LAYER BOUNDARY TO EITHER THE
!               COINCIDENT OR UPPER DISORT LAYER BOUNDARY.
!       IHISAV  VALUE OF IHIFLX AT PREVIOUS (HIGHER) MODTRAN LAYER.
!       IHI     DISORT LAYER UPPER BOUNDARY INDEX.
!       ILO     DISORT LAYER LOWER BOUNDARY INDEX (=IHI+1).
!       ONLYFL  .TRUE. FOR AZIMUTHALLY INDEPENDENT CALLS TO DISORT.
!       PMOM    PHASE FUNCTION LEGENDRE POLYNOMIAL
!               EXPANSION COEFFICIENTS.
!       GSCTSM  GTSCAT SUMMED OVER MERGED LAYERS.
!       UP      OPTICAL DEPTH INTERPOLATED UPWARD DIFFUSE
!               THERMAL FLUX [W CM-2 / CM-1].
!       UPS     OPTICAL DEPTH INTERPOLATED UPWARD DIFFUSE
!               SOLAR FLUX [W CM-2 / CM-1].
!       DN      OPTICAL DEPTH INTERPOLATED DOWNWARD DIFFUSE
!               THERMAL FLUX [W CM-2 / CM-1].
!       DNS     OPTICAL DEPTH INTERPOLATED DOWNWARD DIFFUSE
!               SOLAR FLUX [W CM-2 / CM-1].
!       DIR     OPTICAL DEPTH INTERPOLATED DIRECT NORMAL
!               FLUX [W CM-2 / CM-1].
!       FRCFLX  FLUX INTERPOLATION FRACTION.
      INTEGER NTAU,NLYR,IK,IKP1,IKX,NMERGE,N,ISTR,INTRVL,NEXT,          &
     &  IHIFLX(LAYDIM),IHISAV,IHI,ILO
      LOGICAL MSFLAG,ONLYFL
      REAL FBEAM,TTEMP,WVNMLO,WVNMHI,WN0,UP,UPS,DN,DNS,DIR,             &
     &  GSCTSM(0:MAXCMU)
      REAL DTAUC(LAYDIM),PHI(MAXPHI),PMOM(0:MAXCMU,1:LAYDIM),           &
     &  SSALB(LAYDIM),TEMPER(0:LAYDIM),UMU(MAXUMU),UTAU(LAYDIM),        &
     &  RFLDIR(LAYDIM),RFLDN(LAYDIM),RFLDNS(LAYDIM),FLDIR(LAYDIM),      &
     &  FLDN(LAYDIM),FLUP(LAYDIM),FLUPS(LAYDIM),UAVG(LAYDIM),           &
     &  DFDT(LAYDIM),U0U(MAXUMU,LAYDIM),UU(MAXUMU,LAYDIM,MAXPHI),       &
     &  ALBMED(MAXUMU),TRNMED(MAXUMU),FRCFLX(LAYDIM),                   &
     &  S0CMS(MAXUMU,LAYDIM),T0CMS(MAXUMU,LAYDIM)

!     DATA:
!       PRNT    DISORT PRINT OPTIONS
!       DELTAM  DELTA M APPROXIMATION FLAG (SET DELTAM
!               TO .FALSE. TO PERFORM CALCULATIONS
!               ANALOGOUS TO THOSE IN BMFLUX/FLXADD).
!       TAUTMN  OPTICAL DEPTH CUTOFF USED TO MERGE LAYERS.
      LOGICAL USRTAU,USRANG,PLANK,DELTAM,PRNT(7),CORINT
      INTEGER IBCND,NUMU,NPHI
      REAL ACCUR,FISOT,TEMIS,PHI0,TAUTMN
      CHARACTER HEADER*127
      SAVE USRTAU,USRANG,DELTAM,PRNT,CORINT,NUMU,NPHI,IBCND,            &
     &  ACCUR,FISOT,TEMIS,PHI0,TAUTMN,HEADER
      DATA USRTAU/.FALSE./,USRANG/.TRUE./,                              &
     &  DELTAM/.TRUE./,PRNT/7*.FALSE./,CORINT/.FALSE./
      DATA NUMU/1/,NPHI/1/,IBCND/0/
      DATA ACCUR/0./,FISOT/0./,TEMIS/0./,PHI0/0./,TAUTMN/1.E-4/
      DATA HEADER/'DISORT2 INTEGRATED INTO MODTRAN4'/

!     SPECTRAL FREQUENCY DATA:


      !IF (V.EQ.28215) THEN
      !   WRITE(*,*) 'INTO TRANS FUNCTION'
      !ENDIF


      WN0=V
      WVNMLO=V-.5*IFWHM
      WVNMHI=V+.5*IFWHM
      IF(WVNMLO.LT.0.)THEN
          WN0=.5*WVNMHI
          WVNMLO=0.
      ENDIF
      !WRITE(*,*) 'V = ',V
!     ANGLES:
      UMU(1)=UMU1
      PHI(1)=PHI1

!     TOP-OF-ATMOSPHERE SOLAR IRRADIANCE AND VERTICAL FLUX:
      IF(UMU0.LE.1.E-5)THEN

!         SUN BELOW OR TOO CLOSE TO HORIZON:
          FBEAM=0.
          DNDRCT(NFLUX,ML)=0.
      ELSE

!         SUN ABOVE THE HORIZON:
          FBEAM=S0
          DNDRCT(NFLUX,ML)=S0*UMU0
          !SOLAR_FLUX(FLOOR(1+(V-IV1)/IDV)) = DNDRCT(NFLUX,ML)  !DRF
          !WRITE(*,*) 'FLUX = ',DNDRCT(NFLUX,ML)
          !WRITE(*,*) 'V = ',V
          !WRITE(*,*) 'N = ',FLOOR(1+(V-IV1)/IDV)
      ENDIF

!     DISALB IS TRUE FOR SPHERICAL ALBEDO OPTION (THIS OPTION HAS
!     NOT BEEN FULLY INTEGRATED AND SHOULD ONLY BE USED WITH CAUTION).
      IF(DISALB .AND. NSTR.LT.4)NSTR=4

!     DEFINE TOP-OF-ATMOSPHERE:
      IK=ML
      UTAU(1)=0.
      TTEMP=TM(ML)
      TEMPER(0)=TM(ML)
      DNFLX(ML)=0.
      DNFLXS(ML)=0.
      DNDIFF(NFLUX,ML)=0.

!     SET SOLAR FLUX VALUES TO ZERO FOR DISAZM=.FALSE.:
      FLUPS(ML)=0.
      RFLDNS(ML)=0.

!     LAYER LOOP INITIALIZATIONS:
      NTAU=1
      NLYR=0
      IHIFLX(ML)=1
      FRCFLX(ML)=0.
      DO ISTR=0,NSTR
          GSCTSM(ISTR)=0.
      ENDDO
      NMERGE=0

!     BEGIN LAYER LOOP:
      DO N=1,IKMAX
          IKP1=IK
          IK=IK-1

!         INITIALIZE THERMAL AND SOLAR SOURCE FUNCTIONS:
          T0CMS(1,N)=0.
          S0CMS(1,N)=0.

!         SET SOLAR FLUX VALUES TO ZERO FOR DISAZM=.FALSE.:
          RFLDNS(N)=0.
          FLUPS(N)=0.

!         MERGE LAYERS ONCE OPTICAL DEPTH EXCEEDS TAUTMN
!         OR NUMBER OF LAYERS REMAINING HAS DROPPED TO 4:
          FRCFLX(IK)=FRCFLX(IKP1)+TAUT(1,IK)
          DO ISTR=0,NSTR
              GSCTSM(ISTR)=GSCTSM(ISTR)+GTSCAT(ISTR,IK)
          ENDDO
          IF(FRCFLX(IK).GT.TAUTMN .OR. IK.LE.4)THEN

!             INCREMENT LAYER AND BOUNDARY INDICES:
              NLYR=NTAU
              NTAU=NTAU+1

!             LOWER BOUNDARY TEMPERATURE:
              TEMPER(NLYR)=TM(IK)

!             LAYER AND CUMULATIVE OPTICAL DEPTH:
              DTAUC(NLYR)=FRCFLX(IK)
              UTAU(NTAU)=UTAU(NLYR)+DTAUC(NLYR)

!             SINGLE SCATTERING ALBEDO & FLUX INTERPOLATION SET-UP:
              IF(DTAUC(NLYR).GT.0.)THEN
                  SSALB(NLYR)=GSCTSM(0)/DTAUC(NLYR)
                  DO IKX=IKP1,IK+NMERGE
                      IHIFLX(IKX)=NLYR
                      FRCFLX(IKX)=FRCFLX(IKX)/DTAUC(NLYR)
                  ENDDO
              ELSE
                  SSALB(NLYR)=0.
                  DO IKX=IKP1,IK+NMERGE
                      IHIFLX(IKX)=NLYR
                      FRCFLX(IKX)=0.
                  ENDDO
              ENDIF

!             LEGENDRE POLYNOMIAL MOMENTS:
              PMOM(0,NLYR)=1.
              IF(GSCTSM(0).GT.0.)THEN
                  DO ISTR=1,NSTR
                      PMOM(ISTR,NLYR)=GSCTSM(ISTR)/GSCTSM(0)
                  ENDDO
              ELSE
                  DO ISTR=1,NSTR
                      PMOM(ISTR,NLYR)=0.
                  ENDDO
              ENDIF

!             INITIALIZE FLUX INTERPOLATION VARIABLES & LAYER SUMS:
              IHIFLX(IK)=NTAU
              FRCFLX(IK)=0.
              DO ISTR=0,NSTR
                  GSCTSM(ISTR)=0.
              ENDDO
              NMERGE=0
          ELSE
              NMERGE=NMERGE+1
          ENDIF

!         END LAYER LOOP:
      ENDDO

!     LOOP OVER CORRELATED-K SUB-INTERVALS
      INTRVL=1
      DO NEXT=2,KNTRVL

!         CALL TO ROUTINE DISORT
          MSFLAG=.TRUE.
          ONLYFL=.TRUE.
          PLANK=.TRUE.
          IF(DISALB)THEN

!             CALL DISORT FOR SPHERICAL ALBEDO (THIS OPTION HAS NOT BEEN
!             FULLY INTEGRATED AND SHOULD ONLY BE USED WITH CAUTION).
              IBCND=1
              UMU(1)=UMU0
              CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,            &
     &          PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,       &
     &          USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,   &
     &          AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,     &
     &          PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,      &
     &          RFLDN,FLDIR,FLDN,FLUP,UAVG,DFDT,UU,U0U,ALBMED,          &
     &          TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))
              IBCND=0
              UMU(1)=UMU1
          ENDIF

!         IF DISAZM IS TRUE AND FBEAM IS POSITIVE, THE SOLAR AND THERMAL
!         MULTIPLE SCATTERING CALCULATIONS ARE PERFORMED SEPARATELY.
          IF(DISAZM .AND. FBEAM.GT.0.)THEN

!             THERMAL MULTIPLE SCATTERING SOURCE AND DIFFUSE FLUX:
              FBEAM=0.
              CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,            &
     &          PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,       &
     &          USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,   &
     &          AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,     &
     &          PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,      &
     &          RFLDN,FLDIR,FLDN,FLUP,UAVG,DFDT,UU,U0U,ALBMED,          &
     &          TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))

!             SOLAR MULTIPLE SCATTERING SOURCE AND DIFFUSE FLUX:
              FBEAM=S0
              MSFLAG=.FALSE.
              ONLYFL=.FALSE.
              PLANK=.FALSE.

!             AVOID COINCIDENT SOLAR AND VIEWING ANGLES:
              IF(ABS(UMU(1)+UMU0).LT..02)THEN
                  IF(UMU0.GT..5)THEN
                      UMU(1)=-(UMU0-.02)
                  ELSE
                      UMU(1)=-(UMU0+.02)
                  ENDIF
              ENDIF
              CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,            &
     &          PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,       &
     &          USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,   &
     &          AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,     &
     &          PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,      &
     &          RFLDNS,FLDIR,FLDN,FLUPS,UAVG,DFDT,UU,U0U,ALBMED,        &
     &          TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))
              UMU(1)=UMU1
              DNFS(INTRVL,1)=RFLDNS(NTAU)

!             COMPUTE AZIMUTHALLY-DEPENDENT S0CMS:
              CALL SNCMS(MAXCMU,MAXUMU,MAXPHI,NLYR,NTAU,S0,UMU0,        &
     &          CSSCAT,UMU1,PMOM,SSALB,DTAUC,UTAU,UU,S0CMS)
          ELSE

!             AZIMUTH INDEPENDENT THERMAL AND SOLAR MULTIPLE SCATTERING.
              CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,            &
     &          PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,       &
     &          USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,   &
     &          AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,     &
     &          PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,      &
     &          RFLDN,FLDIR,FLDN,FLUP,UAVG,DFDT,UU,U0U,ALBMED,          &
     &          TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))
          ENDIF

!         SUM TOP-OF-ATMOSPHERE FLUXES:
          UPFLX(ML)=UPFLX(ML)+SUBINT(INTRVL)*FLUP(1)
          UPFLXS(ML)=UPFLXS(ML)+SUBINT(INTRVL)*FLUPS(1)
          NTFLX(ML)=NTFLX(ML)                                           &
     &      +SUBINT(INTRVL)*(FLUP(1)+FLUPS(1)-RFLDIR(1))
          RFLDN(1)=0.

!         LAYER LOOP INITIALIZATIONS:
          IK=ML
          IHISAV=1
          NTAU=1
          NLYR=0
          DO ISTR=0,NSTR
              GSCTSM(ISTR)=0.
          ENDDO
          NMERGE=0
          DO N=1,IKMAX

!             SUM FLUXES FROM PREVIOUS CORRELATED-K SUB-INTERVAL:
              IKP1=IK
              IK=IK-1
              IHI=IHIFLX(IK)
              IF(FRCFLX(IK).EQ.0.)THEN

!                 DISORT AND MODTRAN BOUNDARY COINCIDE:
                  UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*FLUP(IHI)
                  UPFLXS(IK)=UPFLXS(IK)+SUBINT(INTRVL)*FLUPS(IHI)
                  DNFLX(IK)=DNFLX(IK)+SUBINT(INTRVL)*RFLDN(IHI)
                  DNFLXS(IK)=DNFLXS(IK)+SUBINT(INTRVL)*RFLDNS(IHI)
                  NTFLX(IK)=NTFLX(IK)+SUBINT(INTRVL)*(FLUP(IHI)         &
     &              -RFLDN(IHI)+FLUPS(IHI)-RFLDNS(IHI)-RFLDIR(IHI))
                  DNDRCT(NFLUX,IK)=DNDRCT(NFLUX,IK)                     &
     &              +SUBINT(INTRVL)*RFLDIR(IHI)
              ELSE

!                 INTERPOLATE TO MODTRAN BOUNDARY:
                  ILO=IHI+1
                  UP=FLUP(IHI)+FRCFLX(IK)*(FLUP(ILO)-FLUP(IHI))
                  UPS=FLUPS(IHI)+FRCFLX(IK)*(FLUPS(ILO)-FLUPS(IHI))
                  DN=RFLDN(IHI)+FRCFLX(IK)*(RFLDN(ILO)-RFLDN(IHI))
                  DNS=RFLDNS(IHI)+FRCFLX(IK)*(RFLDNS(ILO)-RFLDNS(IHI))
                  DIR=RFLDIR(IHI)+FRCFLX(IK)*(RFLDIR(ILO)-RFLDIR(IHI))
                  UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*UP
                  UPFLXS(IK)=UPFLXS(IK)+SUBINT(INTRVL)*UPS
                  DNFLX(IK)=DNFLX(IK)+SUBINT(INTRVL)*DN
                  DNFLXS(IK)=DNFLXS(IK)+SUBINT(INTRVL)*DNS
                  NTFLX(IK)=NTFLX(IK)+SUBINT(INTRVL)*(UP-DN+UPS-DNS-DIR)
                  DNDRCT(NFLUX,IK)=DNDRCT(NFLUX,IK)+SUBINT(INTRVL)*DIR
              ENDIF

!             STORE THERMAL & SOLAR SOURCE FUNCTIONS IN UPF & UPFS.
              UPF(INTRVL,IK)=T0CMS(1,IHISAV)
              UPFS(INTRVL,IK)=S0CMS(1,IHISAV)
              IF(IHI.NE.IHISAV)THEN

!                 REINITIALIZE SOURCE FUNCTIONS.
                  T0CMS(1,IHISAV)=0.
                  S0CMS(1,IHISAV)=0.
                  IHISAV=IHI
              ENDIF

!             MERGE LAYERS ONCE OPTICAL DEPTH EXCEEDS TAUTMN
!             OR NUMBER OF LAYERS REMAINING HAS DROPPED TO 4:
              FRCFLX(IK)=FRCFLX(IKP1)+TAUT(NEXT,IK)
              DO ISTR=0,NSTR
                  GSCTSM(ISTR)=GSCTSM(ISTR)+GTSCAT(ISTR,IK)
              ENDDO
              IF(FRCFLX(IK).GT.TAUTMN .OR. IK.LE.4)THEN

!                 INCREMENT LAYER AND BOUNDARY INDICES:
                  NLYR=NTAU
                  NTAU=NTAU+1

!                 LOWER BOUNDARY TEMPERATURE:
                  TEMPER(NLYR)=TM(IK)

!                 LAYER AND CUMULATIVE OPTICAL DEPTH:
                  DTAUC(NLYR)=FRCFLX(IK)
                  UTAU(NTAU)=UTAU(NLYR)+DTAUC(NLYR)

!                 SINGLE SCATTERING ALBEDO & FLUX INTERPOLATION SET-UP:
                  IF(DTAUC(NLYR).GT.0.)THEN
                      SSALB(NLYR)=GSCTSM(0)/DTAUC(NLYR)
                      DO IKX=IKP1,IK+NMERGE
                          IHIFLX(IKX)=NLYR
                          FRCFLX(IKX)=FRCFLX(IKX)/DTAUC(NLYR)
                      ENDDO
                  ELSE
                      SSALB(NLYR)=0.
                      DO IKX=IKP1,IK+NMERGE
                          IHIFLX(IKX)=NLYR
                          FRCFLX(IKX)=0.
                      ENDDO
                  ENDIF

!                 LEGENDRE POLYNOMIAL MOMENTS:
                  PMOM(0,NLYR)=1.
                  IF(GSCTSM(0).GT.0.)THEN
                      DO ISTR=1,NSTR
                          PMOM(ISTR,NLYR)=GSCTSM(ISTR)/GSCTSM(0)
                      ENDDO
                  ELSE
                      DO ISTR=1,NSTR
                          PMOM(ISTR,NLYR)=0.
                      ENDDO
                  ENDIF

!                 INITIALIZE FLUX INTERPOLATION VARIABLES & LAYER SUMS:
                  IHIFLX(IK)=NTAU
                  FRCFLX(IK)=0.
                  DO ISTR=0,NSTR
                      GSCTSM(ISTR)=0.
                  ENDDO
                  NMERGE=0
              ELSE
                  NMERGE=NMERGE+1
              ENDIF
          ENDDO

!         REINITIALIZE SOURCE FUNCTIONS.
          T0CMS(1,IHI)=0.
          S0CMS(1,IHI)=0.
          INTRVL=NEXT
      ENDDO

!     LAST CORRELATED-K SUB-INTRVL.  CALL TO ROUTINE DISORT.
      MSFLAG=.TRUE.
      ONLYFL=.TRUE.
      PLANK=.TRUE.
      IF(DISALB)THEN

!         CALL DISORT FOR SPHERICAL ALBEDO (THIS OPTION HAS NOT BEEN
!         FULLY INTEGRATED AND SHOULD ONLY BE USED WITH CAUTION).
          IBCND=1
          UMU(1)=UMU0
          CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,                &
     &      PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,           &
     &      USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,       &
     &      AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,         &
     &      PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,          &
     &      RFLDN,FLDIR,FLDN,FLUP,UAVG,DFDT,UU,U0U,ALBMED,              &
     &      TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))
          IBCND=0
          UMU(1)=UMU1
      ENDIF

!     IF DISAZM IS TRUE AND FBEAM IS POSITIVE, THE SOLAR AND THERMAL
!     MULTIPLE SCATTERING CALCULATIONS ARE PERFORMED SEPARATELY.
      IF(DISAZM .AND. FBEAM.GT.0.)THEN

!         THERMAL MULTIPLE SCATTERING SOURCE AND DIFFUSE FLUX:
          FBEAM=0.
          CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,                &
     &      PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,           &
     &      USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,       &
     &      AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,         &
     &      PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,          &
     &      RFLDN,FLDIR,FLDN,FLUP,UAVG,DFDT,UU,U0U,ALBMED,              &
     &      TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))

!         SOLAR MULTIPLE SCATTERING SOURCE AND DIFFUSE FLUX:
          FBEAM=S0
          MSFLAG=.FALSE.
          ONLYFL=.FALSE.
          PLANK=.FALSE.

!         AVOID COINCIDENT SOLAR AND VIEWING ANGLES:
          IF(ABS(UMU(1)+UMU0).LT..02)THEN
              IF(UMU0.GT..5)THEN
                  UMU(1)=-(UMU0-.02)
              ELSE
                  UMU(1)=-(UMU0+.02)
              ENDIF
          ENDIF
          CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,                &
     &      PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,           &
     &      USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,       &
     &      AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,         &
     &      PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,          &
     &      RFLDNS,FLDIR,FLDN,FLUPS,UAVG,DFDT,UU,U0U,ALBMED,            &
     &      TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))
          UMU(1)=UMU1
          DNFS(INTRVL,1)=RFLDNS(NTAU)

!         COMPUTE AZIMUTHALLY-DEPENDENT S0CMS:
          CALL SNCMS(MAXCMU,MAXUMU,MAXPHI,NLYR,NTAU,S0,UMU0,            &
     &      CSSCAT,UMU1,PMOM,SSALB,DTAUC,UTAU,UU,S0CMS)
      ELSE

!         AZIMUTH INDEPENDENT THERMAL AND SOLAR MULTIPLE SCATTERING.
          CALL DISORT(CORINT,DELTAM,ONLYFL,MSFLAG,ACCUR,                &
     &      PRNT,HEADER,NTAU,NTAU,MAXUMU,MAXCMU,MAXPHI,PLANK,           &
     &      USRANG,USRTAU,FBEAM,UMU,UMU0,PHI0,DTAUC,FISOT,AASALB,       &
     &      AATEMP,IBCND,10,NLYR,NPHI,NSTR,NTAU,NUMU,SSALB,PHI,         &
     &      PMOM,UTAU,TEMIS,TTEMP,TEMPER,WVNMLO,WVNMHI,RFLDIR,          &
     &      RFLDN,FLDIR,FLDN,FLUP,UAVG,DFDT,UU,U0U,ALBMED,              &
     &      TRNMED,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1))
      ENDIF

!     SUM TOP-OF-ATMOSPHERE FLUXES:
      UPFLX(ML)=UPFLX(ML)+SUBINT(INTRVL)*FLUP(1)
      UPFLXS(ML)=UPFLXS(ML)+SUBINT(INTRVL)*FLUPS(1)
      UPDIFF(NFLUX,ML)=UPFLX(ML)+UPFLXS(ML)
      NTFLX(ML)=NTFLX(ML)+SUBINT(INTRVL)*(FLUP(1)+FLUPS(1)-RFLDIR(1))
      RFLDN(1)=0.
      RFLDNS(1)=0.

!     LOOP OVER LAYERS
      IK=ML
      IHI=1
      DO N=1,IKMAX

!         SUM FLUXES FROM PREVIOUS CORRELATED-K SUB-INTERVAL:
          IK=IK-1
          UPF(KNTRVL,IK)=T0CMS(1,IHI)
          UPFS(KNTRVL,IK)=S0CMS(1,IHI)
          IHI=IHIFLX(IK)
          IF(FRCFLX(IK).EQ.0.)THEN

!             DISORT AND MODTRAN BOUNDARY COINCIDE:
              UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*FLUP(IHI)
              UPFLXS(IK)=UPFLXS(IK)+SUBINT(INTRVL)*FLUPS(IHI)
              DNFLX(IK)=DNFLX(IK)+SUBINT(INTRVL)*RFLDN(IHI)
              DNFLXS(IK)=DNFLXS(IK)+SUBINT(INTRVL)*RFLDNS(IHI)
              NTFLX(IK)=NTFLX(IK)+SUBINT(INTRVL)*(FLUP(IHI)             &
     &          -RFLDN(IHI)+FLUPS(IHI)-RFLDNS(IHI)-RFLDIR(IHI))
              DNDRCT(NFLUX,IK)=DNDRCT(NFLUX,IK)                         &
     &          +SUBINT(INTRVL)*RFLDIR(IHI)
          ELSE

!             INTERPOLATE TO MODTRAN BOUNDARY:
              ILO=IHI+1
              UP=FLUP(IHI)+FRCFLX(IK)*(FLUP(ILO)-FLUP(IHI))
              UPS=FLUPS(IHI)+FRCFLX(IK)*(FLUPS(ILO)-FLUPS(IHI))
              DN=RFLDN(IHI)+FRCFLX(IK)*(RFLDN(ILO)-RFLDN(IHI))
              DNS=RFLDNS(IHI)+FRCFLX(IK)*(RFLDNS(ILO)-RFLDNS(IHI))
              DIR=RFLDIR(IHI)+FRCFLX(IK)*(RFLDIR(ILO)-RFLDIR(IHI))
              UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*UP
              UPFLXS(IK)=UPFLXS(IK)+SUBINT(INTRVL)*UPS
              DNFLX(IK)=DNFLX(IK)+SUBINT(INTRVL)*DN
              DNFLXS(IK)=DNFLXS(IK)+SUBINT(INTRVL)*DNS
              NTFLX(IK)=NTFLX(IK)+SUBINT(INTRVL)*(UP-DN+UPS-DNS-DIR)
              DNDRCT(NFLUX,IK)=DNDRCT(NFLUX,IK)+SUBINT(INTRVL)*DIR
          ENDIF
          UPDIFF(NFLUX,IK)=UPFLX(IK)+UPFLXS(IK)
          DNDIFF(NFLUX,IK)=DNFLX(IK)+DNFLXS(IK)
          !IF (IK.EQ.IKMAX) THEN
          !  DIFFUSE_FLUX(1+FLOOR(1+V-IV1)/IDV) = UPDIFF(NFLUX,IK)
          !ENDIF
!         STORE THERMAL AND SOLAR SOURCE FUNCTIONS IN UPF AND UPFS.
      ENDDO

!     WRITE OUT SPECTRAL FLUXES:
      IF(FLAGS(1:4).NE.'    ')THEN
          CALL SCNFLX(NUM_LRES,SOLAR_FLUX,DIFFUSE_FLUX,                 &
     &                NUM_LEVS,FLX_UPDIFFUSE,FLX_DNDIFFUSE,FLX_DNDIRECT)
      ELSEIF(NFLUX.LT.NWGT)THEN
          NFLUX=NFLUX+1
      ELSE
          CALL SPCFLX
      ENDIF

!     RETURN TO LOOP
      RETURN
      END
