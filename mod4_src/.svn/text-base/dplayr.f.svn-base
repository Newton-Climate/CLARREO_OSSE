      SUBROUTINE DPLAYR(J,SINAI,COSAI,CPATH,SH,GAMMA,IAMT,S,BEND,RNG)
      INCLUDE 'PARAMS.h'

!     DOUBLE PRECISION VERSION OF THE PREVIOUS ROUTINE "LAYER".
!     THIS SUBROUTINE CALCULATES THE REFRACTED PATH FROM Z1 TO
!     Z2 WITH THE SIN OF THE INITIAL INCIDENCE ANGLE SINAI.
      DOUBLE PRECISION HDEN(MEXT),DENA(MEXT),DENB(MEXT),DPANDX
      REAL EPSILN
      DOUBLE PRECISION Z1,Z2,H1,R1,DHMIN,SINAI1,COSAI1,Y1,Y3,X1,SINAI,  &
     &     COSAI,CPATH,SH,GAMMA,BEND,RATIO1,S,DSDX1,DBNDX1,PA,PB,TA,    &
     &     TB,RHOA,RHOB,DZ,HP,HRHO,DH,H3,R3,H2,R2,SINAI2,SINAI3,RATIO2, &
     &     RATIO3,COSAI3,X3,DX,W1,W2,W3,COSAI2,X2,D31,D32,D21,          &
     &     DSDX2,DSDX3,DS,DBEND,DSDZ,DHHP,DHRH,H3Z1,                    &
     &     DPRARF,DBNDX2,DBNDX3,RNG,DPRE
      INTEGER N,J,IAMT,K
      LOGICAL LSMALL

!     SSI COMMENTS ON DOUBLE PRECISION VARIABLES:
!     RFRPTH IS THE OLD COMMON BLOCK IN SINGLE PRECISION.
!     DPRFRP IS THE SAME COMMON BLOCK IN DOUBLE PRECISION; IT IS NEW.
!     IN THIS ROUTINE SP IS USED AS A PREFIX TO DENOTE THE
!     SINGLE PRECISION VARIABLES OF RFRPTH.
!     THE FOLLOWING ARE THE EXCEPTIONS:
!     SPPPSM STANDS FOR THE OLD SINGLE PRECISION PPSUM
!     SPTPSM STANDS FOR THE OLD SINGLE PRECISION TPSUM
!     SPRHOP STANDS FOR THE OLD SINGLE PRECISION RHOPSM
!     THE VARIABLES OF THE DOUBLE PRECISION BLOCK DPRFRP HAVE THE
!     SAME NAMES AS THOSE OF THE ORIGINAL SINGLE PRECISION BLOCK;
!     THAT IS, WITHOUT ANY PREFIXES.

!     COMMONS:
      REAL RE,ZMAX
      INTEGER IPATH
      COMMON/PARMTR/RE,ZMAX,IPATH

!     COMMON/RCNSTN/
!       PI       THE CONSTANT PI
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     /RFRPTH/
      REAL SPZP,SPPP,SPTP,SPPPSM,SPTPSM,SPRHOP,SPDENP,SPAMTP,DRANGE
      COMMON/RFRPTH/SPZP(LAYDIM+1),SPPP(LAYDIM+1),SPTP(LAYDIM+1),       &
     &  SPPPSM(LAYDIM+1),SPTPSM(LAYDIM+1),SPRHOP(LAYDIM+1),             &
     &  SPDENP(MEXT,LAYDIM+1),SPAMTP(MEXT,LAYDIM+1),DRANGE(LAYDIM+1)
      DOUBLE PRECISION ZP,PP,TP,RFNDXP,PPSUM,TPSUM,RHOPSM,DENP,AMTP
      COMMON/DPRFRP/ZP(LAYDIM+1),PP(LAYDIM+1),TP(LAYDIM+1),             &
     &  RFNDXP(LAYDIM+1),PPSUM(LAYDIM+1),TPSUM(LAYDIM+1),               &
     &  RHOPSM(LAYDIM+1),DENP(MEXT,LAYDIM+1),AMTP(MEXT,LAYDIM+1)
      COMMON /SMALL2/LSMALL

!     THE ACTUAL NUMBER OF PARAMETERS ARE:

!     PARAMETER MEXT DENOTES THE NUMBER OF MODTRAN "SPECIES".
!     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES
!     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.

      REAL DENAX(NMOLX),DENBX(NMOLX),HDENX(NMOLX)
      COMMON /RFRPTX/ DENPX(NMOLX,LAYDIM+1),AMTPX(NMOLX,LAYDIM+1)

!       GCAIR   GAS CONSTANT FOR AIR [MB/(GM CM-3 K)].
      DOUBLE PRECISION GCAIR,DELTAS
      DATA EPSILN/1.E-5/,GCAIR/2870.53/,DELTAS/5./
!***  INITIALIZE LOOP
      DPRE=DBLE(RE)
      N=0
      Z1=ZP(J)
      Z2=ZP(J+1)
      H1=Z1
      R1=DPRE+H1
      DHMIN=DBLE(.5)*DELTAS**2/R1
      SINAI1=CPATH/DPANDX(R1,H1,SH,GAMMA)
      COSAI1=-SQRT((DBLE(1.)-SINAI1)*(DBLE(1.)+SINAI1))
      Y1=DBLE(.25)*COSAI1**2
      Y1=2*Y1*(DBLE(1.)+Y1*(DBLE(1.)+Y1))
      Y3=DBLE(0.)
      X1=-R1*COSAI1
      RATIO1=R1/DPRARF(H1,SH,GAMMA)
      DSDX1=DBLE(1.)/(DBLE(1.)-RATIO1*SINAI1**2)
      DBNDX1=DSDX1*SINAI1*RATIO1/R1
      S=DBLE(0.)
      BEND=DBLE(0.)
      IF(IAMT.NE.2)THEN

!         INITIALIZE THE VARIABLES FOR THE CALCULATION OF THE
!         ABSORBER AMOUNTS.
          PA=PP(J)
          PB=PP(J+1)
          TA=TP(J)
          TB=TP(J+1)
          RHOA=PA/(GCAIR*TA)
          RHOB=PB/(GCAIR*TB)
          DZ=ZP(J+1)-ZP(J)
          IF(LSMALL .AND. ABS(DZ).LT.1.E-15)THEN
              DZ=1.D-20
              HP=1.D-20
          ELSEIF(.NOT.LSMALL .AND. ABS(PB/PA).GE..99999)THEN
              HP=1.D-20
          ELSE
              HP=-DZ/LOG(PB/PA)
          ENDIF
          IF(ABS(RHOB/RHOA-DBLE(1.)).GE.EPSILN)THEN
              HRHO=-DZ/LOG(RHOB/RHOA)
          ELSE
              HRHO=1.D30
          ENDIF
          DO 10 K=1,MEXT
              DENA(K)=DENP(K,J)
              DENB(K)=DENP(K,J+1)
              HDEN(K)=DBLE(0.)
              IF(DENA(K).GT.0. .AND. DENB(K).GT.0. .AND.                &
     &          K.NE.16 .AND. K.NE.66 .AND. K.NE.67 .AND.               &
     &          ABS(DENB(K)-DENA(K)).GT.DBLE(EPSILN)*DENB(K))           &
     &          HDEN(K)=DZ/LOG(DENA(K)/DENB(K))
   10     CONTINUE
          DO 20 K=1,NMOLX
              DENAX(K)=DENPX(K,J)
              DENBX(K)=DENPX(K,J+1)
              HDENX(K)=0.
              IF(DENAX(K).GT.0. .AND. DENBX(K).GT.0. .AND.              &
     &          ABS(DENBX(K)-DENAX(K)).GT.EPSILN*DENBX(K))              &
     &          HDENX(K)=REAL(DZ)/LOG(DENAX(K)/DENBX(K))
   20     CONTINUE
      ENDIF

!     LOOP THROUGH PATH.  INTEGRATE PATH QUANTITIES USING
!     QUADRATIC INTEGRATION WITH UNEQUALLY SPACED POINTS.
   30 CONTINUE
      N=N+1
      DH=-DELTAS*COSAI1
      IF(DH.LT.DHMIN)DH=DHMIN
      H3=H1+DH
      IF(H3.GT.Z2)H3=Z2
      DH=H3-H1
      R3=DPRE+H3
      H2=H1+DH/2
      R2=DPRE+H2
      SINAI2=CPATH/DPANDX(R2,H2,SH,GAMMA)
      SINAI3=CPATH/DPANDX(R3,H3,SH,GAMMA)
      RATIO2=R2/DPRARF(H2,SH,GAMMA)
      RATIO3=R3/DPRARF(H3,SH,GAMMA)
      IF((DBLE(1.)-SINAI2).LE.EPSILN)THEN

!         NEAR A TANGENT HEIGHT, COSAI=-SQRT(1-SINAI**2) LOSES
!         PRECISION.  USE THE FOLLOWING ALGORITHM TO GET COSAI.
          Y3=Y1+(SINAI1*(DBLE(1.)-RATIO1)/R1                            &
     &      +DBLE(4.)*SINAI2*(DBLE(1.)-RATIO2)/R2                       &
     &      +SINAI3*(DBLE(1.)-RATIO3)/R3)*DH/DBLE(6.)
          IF(Y3.GE.0.)THEN
              COSAI3=-SQRT(Y3*(DBLE(2.)-Y3))
          ELSE
              Y3=DBLE(1.)-SINAI3
              COSAI3=-SQRT(Y3*(DBLE(1.)+SINAI3))
          ENDIF
          X3=-R3*COSAI3
          DX=X3-X1
          W1=DBLE(.5)*DX
          W2=DBLE(.0)
          W3=DBLE(.5)*DX
      ELSE
          COSAI2=-SQRT((DBLE(1.)-SINAI2)*(DBLE(1.)+SINAI2))
          COSAI3=-SQRT((DBLE(1.)-SINAI3)*(DBLE(1.)+SINAI3))
          X2=-R2*COSAI2
          X3=-R3*COSAI3

!         CALCULATE WEIGHTS.
          D31=X3-X1
          D32=X3-X2
          D21=X2-X1
          IF(D32.EQ.0. .OR. D21.EQ.0.)THEN
              W1=DBLE(.5)*D31
              W2=DBLE(.0)
              W3=DBLE(.5)*D31
          ELSE
              W1=(2-D32/D21)*D31/6
              W2=D31**3/(D32*D21*6)
              W3=(2-D21/D32)*D31/6
          ENDIF
      ENDIF
      DSDX2=DBLE(1.)/(DBLE(1.)-RATIO2*SINAI2**2)
      DSDX3=DBLE(1.)/(DBLE(1.)-RATIO3*SINAI3**2)
      DBNDX2=DSDX2*SINAI2*RATIO2/R2
      DBNDX3=DSDX3*SINAI3*RATIO3/R3
!***  INTEGRATE
      DS=W1*DSDX1+W2*DSDX2+W3*DSDX3
      IF(LSMALL)DS=RNG
      S=S+DS
      DBEND=W1*DBNDX1+W2*DBNDX2+W3*DBNDX3
      IF(LSMALL)DBEND=DBLE(0.)
      BEND=BEND+DBEND
      IF(IAMT.NE.2)  THEN
!***  CALCULATE AMOUNTS
      IF (LSMALL .AND. ABS(DZ) .LT. 1E-15 ) THEN
      DSDZ=DBLE(BIGEXP+1.)
      DHHP=0
      ELSE
         DSDZ=DS/DH
         DHHP=DH/HP
      ENDIF
      IF(DHHP .LE. BIGEXP) THEN
      PB=PA*EXP(-DHHP )
      ELSE
         PB=DBLE(0.)
      ENDIF
      DHRH=DH/HRHO
      IF(DHRH .LE. BIGEXP) THEN
         RHOB=RHOA*EXP(-DHRH   )
      ELSE
         RHOB=DBLE(0.)
      ENDIF
      IF((DH/HRHO).GE.EPSILN)  THEN
      PPSUM(J)=PPSUM(J)+DSDZ*(HP/(DBLE(1.)+HP/HRHO))*(PA*RHOA-PB*RHOB)
      TPSUM(J)=TPSUM(J)+DSDZ*HP*(PA-PB)/GCAIR
      RHOPSM(J)=RHOPSM(J)+DSDZ*HRHO*(RHOA-RHOB)
      SPPPSM(J)=REAL(PPSUM(J))
      SPTPSM(J)=REAL(TPSUM(J))
      SPRHOP(J)=REAL(RHOPSM(J))
      ELSE
         PPSUM(J)=PPSUM(J)+DS*(PA*RHOA+PB*RHOB)/2
         TPSUM(J)=TPSUM(J)+DS*(PA+PB)/GCAIR/2
         RHOPSM(J)=RHOPSM(J)+DS*(RHOA+RHOB)/2
         SPPPSM(J)=REAL(PPSUM(J))
         SPTPSM(J)=REAL(TPSUM(J))
         SPRHOP(J)=REAL(RHOPSM(J))
      ENDIF
      DRANGE(J)=DRANGE(J)+REAL(DS)
      DO 140 K=1,MEXT+NMOLX

         IF ( K .GT. MEXT) THEN
            KX=K -MEXT
            IF(ABS(HDENX(KX)).EQ.0.)THEN
!***           LINEAR INTERPOLATION
               DENBX(KX)=DENPX(KX,J)+                                   &
     &           (DENPX(KX,J+1)-DENPX(KX,J))*REAL((H3-Z1)/DZ)
               AMTPX(KX,J)=AMTPX(KX,J)+.5*(DENAX(KX)+DENBX(KX))*REAL(DS)
            ELSEIF(REAL(DH)/HDENX(KX).GE.EPSILN)THEN
!***           EXPONENTIAL INTERPOLATION
               H3Z1= (H3-Z1)/DBLE(HDENX(KX))
               IF(H3Z1.LE.BIGEXP)THEN
                  DENBX(KX)=DENPX(KX,J)*EXP(-REAL(H3Z1))
               ELSE
                  DENBX(KX)=0.
               ENDIF
               AMTPX(KX,J)=AMTPX(KX,J)+                                 &
     &           REAL(DSDZ)*HDENX(KX)*(DENAX(KX)-DENBX(KX))
            ELSE
!***           LINEAR INTERPOLATION
               DENBX(KX)=DENPX(KX,J)+                                   &
     &           (DENPX(KX,J+1)-DENPX(KX,J))*REAL((H3-Z1)/DZ)
               AMTPX(KX,J)=AMTPX(KX,J)+.5*(DENAX(KX)+DENBX(KX))*REAL(DS)
            ENDIF
            GO TO 140
         ENDIF

         IF(ABS(HDEN(K)).EQ.0.)THEN
!***        LINEAR INTERPOLATION
            DENB(K)=DENP(K,J)+(DENP(K,J+1)-DENP(K,J))*(H3-Z1)/DZ
            AMTP(K,J)=AMTP(K,J)+DBLE(.5)*(DENA(K)+DENB(K))*DS
         ELSEIF(DH/HDEN(K).GE.EPSILN)THEN
!***        EXPONENTIAL INTERPOLATION
            H3Z1= (H3-Z1)/HDEN(K)
            IF(H3Z1 .LE.BIGEXP) THEN
               DENB(K)=DENP(K,J)*EXP(-H3Z1)
            ELSE
               DENB(K)=DBLE(0.)
            ENDIF
            AMTP(K,J)=AMTP(K,J)+DSDZ*HDEN(K)*(DENA(K)-DENB(K))
         ELSE
!***        LINEAR INTERPOLATION
            DENB(K)=DENP(K,J)+(DENP(K,J+1)-DENP(K,J))*(H3-Z1)/DZ
            AMTP(K,J)=AMTP(K,J)+DBLE(.5)*(DENA(K)+DENB(K))*DS
         ENDIF
         SPAMTP(K,J)=REAL(AMTP(K,J))
 140     CONTINUE
         PA=PB
         RHOA=RHOB
         DO 145 K=1,MEXT+NMOLX
            IF (K .LE. MEXT) THEN
               DENA(K)=DENB(K)
            ELSE
               DENAX(K-MEXT)=DENBX(K-MEXT)
            ENDIF
 145     CONTINUE
      ENDIF
      IF(H3.LT.Z2) THEN
         H1=H3
         R1=R3
         SINAI1=SINAI3
         RATIO1=RATIO3
         Y1=Y3
         COSAI1=COSAI3
         X1=X3
         DSDX1=DSDX3
         DBNDX1=DBNDX3
         IF (.NOT. LSMALL) GO TO 30
      ENDIF
      SINAI=SINAI3
      COSAI=COSAI3
      RETURN
      END
